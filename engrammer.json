{
  "keyboard": "glove80",
  "uuid": "",
  "date": 1699040184,
  "creator": "",
  "parent_uuid": "ff1c67b9-349c-4f91-bb58-32a8ffe998e0",
  "firmware_api_version": "1",
  "locale": "en-US",
  "title": "Sunaku's Keymap v28 (Engrammer)",
  "notes": "Sunaku's Keymap v28 featuring the Engrammer layout and legendary Miryoku\n- for setup instructions: https://github.com/sunaku/glove80-keymaps#readme\n- for release notes: https://github.com/sunaku/glove80-keymaps/releases/tag/v28\n- for upgrade diffs: https://github.com/sunaku/glove80-keymaps/compare/v27...v28\n\nSummary:\nHey everyone, I'm pleased to announce a new version 28 of my Glove80 keymaps featuring Emoji modifiers for skin tone, gender sign, and hair styles; simpler Miryoku layers (no AltGr, boot, reset); and more.\n\nChanges:\n- Miryoku layers: remove &bootloader and &reset keys; they're available on the Magic layer (by factory default) instead.\n- Remove RALT (AltGr: Alternate Graphics) modifier from Miryoku layers because it's only found in shortcuts involving base layer keys, according to https://en.wikipedia.org/wiki/AltGr_key\n- Cursor layer: mirror the Undo/Redo/Backspace arrangement on the left half to lessen the cognitive burden of one/two handed usage differentiation.\n- Cursor layer: move \"Emoji Chooser\" key from right thumb cluster to bottom outer corner of right half.\n- Cursor layer: add `&select_none` macro to dismiss the current selection while ideally preserving the cursor position.\n- Emoji layer: add Zero Width Joiner (ZWJ) on left index finger's home position for combining emojis, like \"heart on fire\".\n- Emoji layer: add gender sign, skin tone, and hair style modifiers as well as human family & ages for use with ZWJ to type compound Emoji characters.\n- Emoji layer: add customizable preset selections for Emoji modifiers so that you can inward-roll them in one swoop on the home row.  See the `#define EMOJI_*_PRESET` settings for more information.\n- Lower layer: add LALT on traditional right shift location for Alt+Numpad \"Alt-keycodes\" in Windows.\n- Lower layer: add `&magic` on bottom right corner key of right half for consistency with left half.\n- Lower layer: use `&to` instead of `&tog` for stricter Miryoku layer toggling -- thanks to Bryan Forbes for pointing this out.\n- World layer: assign N tilde macro to a key.\n- World layer: swap question and exclamation marks to put bang on same key as pipe on Symbol layer.\n- Emoji layer: swap Heart and Fire keys.",
  "tags": [
    "sunaku",
    "engrammer",
    "engram",
    "miryoku",
    "vim",
    "gaming",
    "typing",
    "emoji",
    "unicode",
    "home-row-mods"
  ],
  "unlisted": false,
  "layer_names": [
    "Base",
    "Lower",
    "Magic",
    "Cursor",
    "Number",
    "Function",
    "Symbol",
    "Mouse",
    "System",
    "Gaming",
    "Typing",
    "Emoji",
    "World"
  ],
  "layers": [
    [
      {
        "value": "&kp",
        "params": [
          {
            "value": "F1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F10",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EQUAL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N0",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GRAVE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "B",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&homey_left RALT Y",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "O",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "U",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SQT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SEMI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "L",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "D",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&homey_right RALT W",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "V",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Z",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&cappy",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&homey_left LGUI C",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&homey_left LALT I",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&homey_left LCTRL E",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&shift_left LSHFT A",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&shift_right LSHFT H",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&homey_right LCTRL T",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&homey_right LALT S",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&homey_right LGUI N",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Q",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "G",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "X",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "J",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Function ESC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LEFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RIGHT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_System ENTER",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "FSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "R",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "M",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "P",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "HOME",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_DN",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Emoji END",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Cursor BACKSPACE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Number DELETE",
            "params": []
          }
        ]
      },
      {
        "value": "&lower",
        "params": []
      },
      {
        "value": "&lower",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Mouse TAB",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&space LAYER_Symbol SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_World LPAR",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RPAR",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      }
    ],
    [
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_BRI_DN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_BRI_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_PREV",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_NEXT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_PP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_MUTE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_VOL_DN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_VOL_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PAUSE_BREAK",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "HOME",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LEFT_PARENTHESIS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_NUM",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_EQUAL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_SLASH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_MULTIPLY",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PRINTSCREEN",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "UP_ARROW",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "END",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RIGHT_PARENTHESIS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SCROLLLOCK",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LEFT_ARROW",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOWN_ARROW",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RIGHT_ARROW",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PERCENT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_PLUS",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LALT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K_APP",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F11",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F12",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_DN",
            "params": []
          }
        ]
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 5,
            "params": []
          }
        ]
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 9,
            "params": []
          }
        ]
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 10,
            "params": []
          }
        ]
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 10,
            "params": []
          }
        ]
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 9,
            "params": []
          }
        ]
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 8,
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_ENTER",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LALT",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "CAPS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "INS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F11",
            "params": []
          }
        ]
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 11,
            "params": []
          }
        ]
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 3,
            "params": []
          }
        ]
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 4,
            "params": []
          }
        ]
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 0,
            "params": []
          }
        ]
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 0,
            "params": []
          }
        ]
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 7,
            "params": []
          }
        ]
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 6,
            "params": []
          }
        ]
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 12,
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N0",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_DOT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_ENTER",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      }
    ],
    [
      {
        "value": "&bt",
        "params": [
          {
            "value": "BT_CLR",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&bt",
        "params": [
          {
            "value": "BT_CLR_ALL",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SPI",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SAI",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_HUI",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_BRI",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_TOG",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&bootloader",
        "params": []
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SPD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SAD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_HUD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_BRD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_EFF",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&bootloader",
        "params": []
      },
      {
        "value": "&reset",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&bt_2",
        "params": []
      },
      {
        "value": "&bt_3",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&reset",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&bt_0",
        "params": []
      },
      {
        "value": "&bt_1",
        "params": []
      },
      {
        "value": "&out",
        "params": [
          {
            "value": "OUT_USB",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      }
    ],
    [
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DEL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "INS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "INS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DEL",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "K",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&sk",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "Y",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "Z",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSPC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "X",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "X",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSPC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "Z",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "Y",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&sk",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "K",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "L",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LGUI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LALT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LCTRL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "C",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "C",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LEFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RIGHT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "L",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "J",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "F",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&select_word",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&select_line",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "A",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "V",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&select_none",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&extend_line",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&extend_word",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "V",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "HOME",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_DN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "END",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "J",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "H",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LS",
            "params": [
              {
                "value": "LC",
                "params": [
                  {
                    "value": "G",
                    "params": []
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&extend_word",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&extend_line",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "G",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 0,
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "A",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&select_line",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&select_word",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "F",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LS",
            "params": [
              {
                "value": "LC",
                "params": [
                  {
                    "value": "G",
                    "params": []
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "G",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "H",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "DOT",
                "params": []
              }
            ]
          }
        ]
      }
    ],
    [
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TILDE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "CARET",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "HASH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DLLR",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "AT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EXCL",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PRCNT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COLON",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_NUM",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LGUI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LALT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LCTRL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PLUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "J",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EQUAL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "STAR",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "FSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LS",
            "params": [
              {
                "value": "G",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 0,
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N0",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PIPE",
            "params": []
          }
        ]
      }
    ],
    [
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_MEDIA_HOME",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_PLAY",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_PREV",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_NEXT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_STOP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_EJECT",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K_WWW",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F10",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F13",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "CAPS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LGUI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LALT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LCTRL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K_CALC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F11",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F14",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_PREV",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_NEXT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_PP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_AL_FILES",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F12",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F15",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 0,
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_MUTE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_VOL_DN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_VOL_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_BRI_MAX",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_BRI_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_BRI_DN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_BRI_MIN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_BRI_AUTO",
            "params": []
          }
        ]
      }
    ],
    [
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LPAR",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RPAR",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SEMI",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TILDE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LBRC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GRAVE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DQT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RBRC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "QMARK",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "HASH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "CARET",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EQUAL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "UNDER",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DLLR",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "STAR",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LCTRL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LALT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LGUI",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EXCL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PIPE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "FSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "STAR",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SQT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "AMPS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PLUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PRCNT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COLON",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "AT",
            "params": []
          }
        ]
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 0,
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      }
    ],
    [
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LCTRL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LALT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LGUI",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 0,
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      }
    ],
    [
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_HUD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_HUI",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_TOG",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_EFR",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_BRD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_BRI",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_EFF",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LCTRL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LALT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LGUI",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SPD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SAD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SAI",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SPI",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K_LOCK",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_SLEEP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_PWR",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PSCRN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SLCK",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PAUSE_BREAK",
            "params": []
          }
        ]
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 0,
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      }
    ],
    [
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GRAVE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "B",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "M",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SQT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "B",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "M",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "FSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "T",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TAB",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Q",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "W",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "E",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "R",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "T",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Y",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "U",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "I",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "O",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "P",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "G",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "A",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "S",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "D",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "ESC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RET",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PAUSE_BREAK",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSPC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DEL",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "G",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "H",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "J",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "L",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SEMI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "V",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LCTRL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Z",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "X",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LALT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LGUI",
            "params": []
          }
        ]
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 0,
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Y",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "W",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "I",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "E",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "A",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "H",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "T",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "S",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "ESC",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RET",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSPC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DEL",
            "params": []
          }
        ]
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 0,
            "params": []
          }
        ]
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 0,
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TAB",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_new_moon",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_waxing_crescent_moon",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_first_quarter_moon",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_waxing_gibbous_moon",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_full_moon",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_light_skin_tone",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_medium_light_skin_tone",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_medium_skin_tone",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_medium_dark_skin_tone",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_dark_skin_tone",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_tada",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_heart",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_fire",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_muscle",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_person_climbing",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_rocket",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_left_arrow",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_bald",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_red_hair",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_curly_hair",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_white_hair",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_right_arrow",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_sunglasses",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_star_struck",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_joy",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_cold_sweat",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_scream",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_exploding_head",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_female_sign",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_skin_tone_preset",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_zwj",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_gender_sign_preset",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_hair_style_preset",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_male_sign",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_snap_fingers",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_ok_hand",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_pray",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_sweat_smile",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_disappointed",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_thinking",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_old_woman",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_woman",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_girl",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_boy",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_man",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_old_man",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_astronaut",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_nerd",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_sparkles",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_person_tipping_hand",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_person_gesturing_ok",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_person_bowing",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_person_raising_hand",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_person_gesturing_no",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_person_shrugging",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_baby",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_baby_bottle",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 0,
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_raised_hands",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_point_up",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_thumbs_up",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_checkoff",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_100",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_warning",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_x",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_question",
            "params": []
          }
        ]
      }
    ],
    [
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_degree_sign",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_y_base",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_o_base",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_u_base",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LALT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RALT",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_n_tilde",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_c_cedilla",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_i_base",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_e_base",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_a_base",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LCTRL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RCTRL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_quote_left",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_exclaim_left",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_question_left",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_quote_right",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_section_sign",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_paragraph_sign",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_o_ordinal",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_a_ordinal",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 0,
            "params": []
          }
        ]
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 0,
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      }
    ]
  ],
  "custom_defined_behaviors": "//////////////////////////////////////////////////////////////////////\n// NOTE: Use the `#define` settings below to customize this keymap! //\n//////////////////////////////////////////////////////////////////////\n// IMPORTANT: You need to set Firmware Version to \"pr21.zmk-update\" //\n// under Settings > Advanced Settings in the Glove80 Layout Editor  //\n// if you want to use the `hold-trigger-on-release` feature in ZMK  //\n// and also the `require-prior-idle-ms` feature for home row mods.  //\n//////////////////////////////////////////////////////////////////////\n// CAUTION: The PR21 firmware is a beta preview to gather feedback: //\n// https://discord.com/channels/877392805654306816/1165858059910918234\n//////////////////////////////////////////////////////////////////////\n//\n// Sunaku's Keymap v28 featuring the Engrammer layout with Miryoku\n// - https://github.com/sunaku/glove80-keymaps\n//\n//////////////////////////////////////////////////////////////////////\n\nbehaviors {\n\n    //////////////////////////////////////////////////////////////////////////\n    //\n    // Miryoku layers and home row mods (ported from my QMK endgame)\n    // - https://sunaku.github.io/home-row-mods.html#porting-to-zmk\n    // - https://github.com/urob/zmk-config#timeless-homerow-mods\n    //\n    //////////////////////////////////////////////////////////////////////////\n\n    //\n    // HOMEY_HOLDING_TYPE defines the flavor of ZMK hold-tap behavior to use\n    // for the pinky, ring, and middle fingers (which are assigned to Super,\n    // Alt, and Ctrl respectively in the Miryoku system) on home row keys.\n    //\n    #define HOMEY_HOLDING_TYPE \"tap-preferred\"\n\n    //\n    // HOMEY_HOLDING_TIME defines how long you need to hold (milliseconds)\n    // home row mod keys in order to send their modifiers to the computer\n    // (i.e. \"register\" them) for mod-click mouse usage (e.g. Ctrl-Click).\n    //\n    #define HOMEY_HOLDING_TIME 270 // TAPPING_TERM + ALLOW_CROSSOVER_AFTER\n\n    //\n    // HOMEY_STREAK_DECAY defines how long you need to wait (milliseconds)\n    // after typing before you can use home row mods again.  It prevents\n    // unintended activation of home row mods when you're actively typing.\n    //\n    #define HOMEY_STREAK_DECAY 170 // global-quick-tap-ms\n\n    //\n    // HOMEY_REPEAT_DECAY defines how much time you have left (milliseconds)\n    // after tapping a key to hold it again in order to make it auto-repeat.\n    //\n    #define HOMEY_REPEAT_DECAY 300 // \"tap then hold\" for key auto-repeat\n\n    //\n    // SHIFT_HOLDING_TYPE defines the flavor of ZMK hold-tap behavior to use\n    // for index fingers (which Miryoku assigns to Shift) on home row keys.\n    //\n    // NOTE: The \"tap-preferred\" flavor of ZMK hold-tap for index finger keys\n    // allows faster activation of the Shift modifier (without having to wait\n    // for the modified key to be released as the \"balanced\" flavor requires).\n    // Typing streaks and the `hold-trigger-on-release` setting are disabled\n    // for the index fingers so as not to hinder their speed and dexterity.\n    //\n    #define SHIFT_HOLDING_TYPE \"tap-preferred\"\n\n    //\n    // SHIFT_HOLDING_TIME defines how long you need to hold (milliseconds)\n    // index finger keys in order to send their modifiers to the computer\n    // (i.e. \"register\" them) for mod-click mouse usage (e.g. Shift-Click).\n    //\n    // CAUTION: You'll need to perform inward rolls from pinky->ring->middle\n    // fingers toward the index fingers when activating multiple modifiers\n    // because `hold-trigger-on-release` is disabled for the index fingers.\n    // Otherwise, you may be surprised that the index fingers' modifier is\n    // sent immediately without the rest of your multi-mod chord when you\n    // perform outward rolls from your index fingers toward your pinkies.\n    //\n    #define SHIFT_HOLDING_TIME 170\n\n    //\n    // SHIFT_STREAK_DECAY defines how long you need to wait (milliseconds)\n    // after typing before you can use home row mods again.  It prevents\n    // unintended activation of home row mods when you're actively typing.\n    //\n    #define SHIFT_STREAK_DECAY 70 // global-quick-tap-ms\n\n    //\n    // SHIFT_REPEAT_DECAY defines how much time you have left (milliseconds)\n    // after tapping a key to hold it again in order to make it auto-repeat.\n    //\n    #define SHIFT_REPEAT_DECAY 300 // \"tap then hold\" for key auto-repeat\n\n    //\n    // THUMB_HOLDING_TYPE defines the flavor of ZMK hold-tap behavior to use\n    // for the thumbs (which are assigned to 6 layers in the Miryoku system).\n    //\n    // NOTE: The \"balanced\" flavor of ZMK hold-tap provides instant modifier\n    // activation for the symbol layer (if the tapped symbol key is released\n    // while the thumb layer key is still held down) for quicker programming.\n    //\n    #define THUMB_HOLDING_TYPE \"balanced\"\n\n    //\n    // THUMB_HOLDING_TIME defines how long you need to hold (milliseconds)\n    // a thumb key to activate a layer.  Shorter holds are treated as taps.\n    //\n    #define THUMB_HOLDING_TIME 200\n\n    //\n    // THUMB_REPEAT_DECAY defines how much time you have left (milliseconds)\n    // after tapping a key to hold it again in order to make it auto-repeat.\n    //\n    #define THUMB_REPEAT_DECAY 300 // \"tap then hold\" for key auto-repeat\n\n    //\n    // SPACE_HOLDING_TIME defines how long you need to hold (milliseconds)\n    // the space thumb key to activate.  Shorter holds are treated as taps.\n    //\n    #define SPACE_HOLDING_TIME 170\n\n    //\n    // SPACE_REPEAT_DECAY defines how much time you have left (milliseconds)\n    // after tapping a key to hold it again in order to make it auto-repeat.\n    //\n    #define SPACE_REPEAT_DECAY 200 // \"tap then hold\" for key auto-repeat\n\n    //\n    // Glove80 key positions index for positional hold-tap\n    // - https://discord.com/channels/877392805654306816/937645688244826154/1066713913351221248\n    // - https://media.discordapp.net/attachments/937645688244826154/1066713913133121556/image.png\n    //\n    // |------------------------|------------------------|\n    // | LEFT_HAND_KEYS         |        RIGHT_HAND_KEYS |\n    // |                        |                        |\n    // |  0  1  2  3  4         |          5  6  7  8  9 |\n    // | 10 11 12 13 14 15      |      16 17 18 19 20 21 |\n    // | 22 23 24 25 26 27      |      28 29 30 31 32 33 |\n    // | 34 35 36 37 38 39      |      40 41 42 43 44 45 |\n    // | 46 47 48 49 50 51      |      58 59 60 61 62 63 |\n    // | 64 65 66 67 68         |         75 76 77 78 79 |\n    // |                69 52   |   57 74                |\n    // |                 70 53  |  56 73                 |\n    // |                  71 54 | 55 72                  |\n    // |------------------------|------------------------|\n    //\n    #define LEFT_HAND_KEYS      \\\n          0  1  2  3  4         \\\n         10 11 12 13 14 15      \\\n         22 23 24 25 26 27      \\\n         34 35 36 37 38 39      \\\n         46 47 48 49 50 51      \\\n         64 65 66 67 68\n    #define RIGHT_HAND_KEYS     \\\n                                           5  6  7  8  9 \\\n                                       16 17 18 19 20 21 \\\n                                       28 29 30 31 32 33 \\\n                                       40 41 42 43 44 45 \\\n                                       58 59 60 61 62 63 \\\n                                          75 76 77 78 79\n    #define THUMB_KEYS          \\\n                        69 52       57 74                \\\n                         70 53     56 73                 \\\n                          71 54   55 72\n\n    //\n    // Home row mod-tap keys for all except index fingers\n    //\n    homey_left: miryoku_home_row_mods_left_hand {\n        compatible = \"zmk,behavior-hold-tap\";\n        label = \"HOME_ROW_MODS_LEFT_HAND\";\n        flavor = HOMEY_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <HOMEY_HOLDING_TIME>;\n        quick-tap-ms = <HOMEY_REPEAT_DECAY>;\n        require-prior-idle-ms = <HOMEY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    homey_right: miryoku_home_row_mods_right_hand {\n        compatible = \"zmk,behavior-hold-tap\";\n        label = \"HOME_ROW_MODS_RIGHT_HAND\";\n        flavor = HOMEY_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <HOMEY_HOLDING_TIME>;\n        quick-tap-ms = <HOMEY_REPEAT_DECAY>;\n        require-prior-idle-ms = <HOMEY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n\n    //\n    // Special home row mod-tap keys for the index fingers\n    //\n    shift_left: miryoku_home_row_mods_left_shift_shift {\n        compatible = \"zmk,behavior-hold-tap\";\n        label = \"HOME_ROW_MODS_LEFT_SHIFT_SHIFT\";\n        flavor = SHIFT_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        //hold-trigger-on-release; // don't wait for other mods\n        tapping-term-ms = <SHIFT_HOLDING_TIME>;\n        quick-tap-ms = <SHIFT_REPEAT_DECAY>;\n        require-prior-idle-ms = <SHIFT_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    shift_right: miryoku_home_row_mods_right_shift_shift {\n        compatible = \"zmk,behavior-hold-tap\";\n        label = \"HOME_ROW_MODS_RIGHT_SHIFT_SHIFT\";\n        flavor = SHIFT_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        //hold-trigger-on-release; // don't wait for other mods\n        tapping-term-ms = <SHIFT_HOLDING_TIME>;\n        quick-tap-ms = <SHIFT_REPEAT_DECAY>;\n        require-prior-idle-ms = <SHIFT_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n\n    //\n    // Thumb cluster hold-tap keys for Miryoku layers\n    //\n    thumb: miryoku_thumb_layer {\n        compatible = \"zmk,behavior-hold-tap\";\n        label = \"MIRYOKU_THUMB_LAYER\";\n        flavor = THUMB_HOLDING_TYPE;\n        tapping-term-ms = <THUMB_HOLDING_TIME>;\n        quick-tap-ms = <THUMB_REPEAT_DECAY>; // enable repeat\n        //global-quick-tap; // no typing streak\n        //retro-tap; // don't allow slow (hold-like) taps\n        #binding-cells = <2>;\n        bindings = <&mo>, <&kp>;\n    };\n    space: miryoku_thumb_layer_spacebar {\n        compatible = \"zmk,behavior-hold-tap\";\n        label = \"MIRYOKU_THUMB_LAYER_SPACEBAR\";\n        flavor = THUMB_HOLDING_TYPE;\n        tapping-term-ms = <SPACE_HOLDING_TIME>;\n        quick-tap-ms = <SPACE_REPEAT_DECAY>; // enable repeat\n        //global-quick-tap; // no typing streak\n        retro-tap; // allow slow (hold-like) taps\n        #binding-cells = <2>;\n        bindings = <&mo>, <&kp>;\n    };\n\n    //////////////////////////////////////////////////////////////////////////\n    //\n    // Custom shifted pairs\n    //\n    //////////////////////////////////////////////////////////////////////////\n\n    //\n    // Shift + CapsWord = CapsLock\n    //\n    cappy: capsword_and_capslock {\n        compatible = \"zmk,behavior-mod-morph\";\n        label = \"CAPSWORD_AND_CAPSLOCK\";\n        #binding-cells = <0>;\n        bindings = <&caps_word>, <&kp CAPSLOCK>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n\n    //////////////////////////////////////////////////////////////////////////\n    //\n    // ZMK global overrides\n    //\n    //////////////////////////////////////////////////////////////////////////\n\n    //\n    // CapsWord - ported from Pascal Getreuer's extension for QMK\n    // - https://zmk.dev/docs/behaviors/caps-word\n    // - https://getreuer.info/posts/keyboards/caps-word/index.html\n    //\n    behavior_caps_word {\n        continue-list = <\n            UNDERSCORE MINUS\n            BACKSPACE DELETE\n            N1 N2 N3 N4 N5 N6 N7 N8 N9 N0\n        >;\n    };\n\n};\n\nmacros {\n\n    //////////////////////////////////////////////////////////////////////////\n    //\n    // Approximation of Pascal Getreuer's Select Word macro from QMK\n    // - https://getreuer.info/posts/keyboards/select-word/index.html\n    //\n    //////////////////////////////////////////////////////////////////////////\n\n    //\n    // SELECT_WORD_DELAY defines how long the macro waits (milliseconds)\n    // after moving the cursor before it selects a word.  A larger delay\n    // may allow the macro to move to the next word upon each invocation.\n    //\n    #define SELECT_WORD_DELAY 1\n\n    ZMK_MACRO(select_none,\n        wait-ms = <SELECT_WORD_DELAY>;\n        tap-ms = <SELECT_WORD_DELAY>;\n        bindings = <&kp DOWN &kp UP &kp RIGHT &kp LEFT>;\n    )\n\n    //\n    // select a word (jumps to next word upon each successive invocation)\n    //\n    select_word: select_word {\n        compatible = \"zmk,behavior-mod-morph\";\n        label = \"SELECT_WORD\";\n        #binding-cells = <0>;\n        bindings = <&select_word_right>, <&select_word_left>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    ZMK_MACRO(select_word_right,\n        wait-ms = <SELECT_WORD_DELAY>;\n        tap-ms = <SELECT_WORD_DELAY>;\n        bindings = <&kp LC(RIGHT) &kp LC(LEFT) &kp LC(LS(RIGHT))>;\n    )\n    ZMK_MACRO(select_word_left,\n        wait-ms = <SELECT_WORD_DELAY>;\n        tap-ms = <SELECT_WORD_DELAY>;\n        bindings = <&kp LC(LEFT) &kp LC(RIGHT) &kp LC(LS(LEFT))>;\n    )\n\n    //\n    // extend current selection by one word\n    //\n    extend_word: extend_word {\n        compatible = \"zmk,behavior-mod-morph\";\n        label = \"EXTEND_WORD\";\n        #binding-cells = <0>;\n        bindings = <&extend_word_right>, <&extend_word_left>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    ZMK_MACRO(extend_word_right,\n        wait-ms = <SELECT_WORD_DELAY>;\n        tap-ms = <SELECT_WORD_DELAY>;\n        bindings = <&kp LC(LS(RIGHT))>;\n    )\n    ZMK_MACRO(extend_word_left,\n        wait-ms = <SELECT_WORD_DELAY>;\n        tap-ms = <SELECT_WORD_DELAY>;\n        bindings = <&kp LC(LS(LEFT))>;\n    )\n\n    //\n    // select current line\n    //\n    select_line: select_line {\n        compatible = \"zmk,behavior-mod-morph\";\n        label = \"SELECT_LINE\";\n        #binding-cells = <0>;\n        bindings = <&select_line_right>, <&select_line_left>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    ZMK_MACRO(select_line_right,\n        wait-ms = <SELECT_WORD_DELAY>;\n        tap-ms = <SELECT_WORD_DELAY>;\n        bindings = <&kp HOME &kp LS(END)>;\n    )\n    ZMK_MACRO(select_line_left,\n        wait-ms = <SELECT_WORD_DELAY>;\n        tap-ms = <SELECT_WORD_DELAY>;\n        bindings = <&kp END &kp LS(HOME)>;\n    )\n\n    //\n    // extend current selection by one line\n    //\n    extend_line: extend_line {\n        compatible = \"zmk,behavior-mod-morph\";\n        label = \"EXTEND_LINE\";\n        #binding-cells = <0>;\n        bindings = <&extend_line_right>, <&extend_line_left>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    ZMK_MACRO(extend_line_right,\n        wait-ms = <SELECT_WORD_DELAY>;\n        tap-ms = <SELECT_WORD_DELAY>;\n        bindings = <&kp LS(DOWN) &kp LS(END)>;\n    )\n    ZMK_MACRO(extend_line_left,\n        wait-ms = <SELECT_WORD_DELAY>;\n        tap-ms = <SELECT_WORD_DELAY>;\n        bindings = <&kp LS(UP) &kp LS(HOME)>;\n    )\n\n    //////////////////////////////////////////////////////////////////////////\n    //\n    // World layer - international characters\n    //\n    //////////////////////////////////////////////////////////////////////////\n\n    //\n    // UNICODE_TARGET_OS defines which operating system you're targeting\n    // for use with the UNICODE() macro.  This is needed because each OS\n    // has different shortcuts for typing Unicode characters as hexcodes.\n    //\n    // NOTE: You may need to enable Unicode hexadecimal input in your OS:\n    // - https://ladedu.com/how-to-enter-unicode-characters-on-a-mac/\n    // - https://unicode-explorer.com/articles/how-to-type-unicode-characters-in-linux\n    // - https://unicode-explorer.com/articles/how-to-type-unicode-characters-in-windows\n    //\n    #define UNICODE_TARGET_OS 1 // linux\n    //#define UNICODE_TARGET_OS 2 // macos\n    //#define UNICODE_TARGET_OS 3 // windows\n\n    //\n    // UNICODE_TAP_DELAY defines how long the macro waits (milliseconds)\n    // between keystrokes while inputting the Unicode codepoint shortcut.\n    //\n    #define UNICODE_TAP_DELAY 1\n\n    //\n    // UNICODE_SEQ_DELAY defines how long the macro waits (milliseconds)\n    // between emitting Unicode codepoints in multi-codepoint characters.\n    //\n    #define UNICODE_SEQ_DELAY 10\n\n    #define UNICODE(name, ...) \\\n        ZMK_MACRO(name, \\\n            wait-ms = <UNICODE_TAP_DELAY>; \\\n            tap-ms = <UNICODE_TAP_DELAY>; \\\n            bindings = __VA_ARGS__; \\\n        )\n\n    //\n    // NOTE: edit the emoji.yaml file and run `rake` to generate this:\n    //\n\n    //\n    // codepoints\n    //\n\n      /* ° */ UNICODE(world_degree_sign,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp B &kp N0 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp B &kp N0>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp B &kp KP_N0>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* § */ UNICODE(world_section_sign,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp A &kp N7 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp A &kp N7>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp A &kp KP_N7>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* ¶ */ UNICODE(world_paragraph_sign,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp B &kp N6 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp B &kp N6>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp B &kp KP_N6>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* º */ UNICODE(world_o_ordinal,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp B &kp A &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp B &kp A>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp B &kp A>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* ª */ UNICODE(world_a_ordinal,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp A &kp A &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp A &kp A>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp A &kp A>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* ¡ */ UNICODE(world_exclaim_left,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp A &kp N1 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp A &kp N1>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp A &kp KP_N1>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* ¿ */ UNICODE(world_question_left,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp B &kp F &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp B &kp F>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp B &kp F>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* « */ UNICODE(world_quote_left,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp A &kp B &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp A &kp B>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp A &kp B>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* » */ UNICODE(world_quote_right,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp B &kp B &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp B &kp B>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp B &kp B>, <&macro_release &kp LALT>\n        #endif\n      )\n\n    //\n    // characters\n    //\n\n      /* ç */ UNICODE(world_c_cedilla_lower,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp E &kp N7 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp E &kp N7>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp E &kp KP_N7>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* Ç */ UNICODE(world_c_cedilla_upper,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp C &kp N7 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp C &kp N7>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp C &kp KP_N7>, <&macro_release &kp LALT>\n        #endif\n      )\n\n        world_c_cedilla: world_c_cedilla {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_C_CEDILLA\";\n            #binding-cells = <0>;\n            bindings = <&world_c_cedilla_lower>, <&world_c_cedilla_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n      /* í */ UNICODE(world_i_acute_lower,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp E &kp D &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp E &kp D>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp E &kp D>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* Í */ UNICODE(world_i_acute_upper,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp C &kp D &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp C &kp D>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp C &kp D>, <&macro_release &kp LALT>\n        #endif\n      )\n\n        world_i_acute: world_i_acute {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_I_ACUTE\";\n            #binding-cells = <0>;\n            bindings = <&world_i_acute_lower>, <&world_i_acute_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n      /* ï */ UNICODE(world_i_diaeresis_lower,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp E &kp F &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp E &kp F>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp E &kp F>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* Ï */ UNICODE(world_i_diaeresis_upper,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp C &kp F &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp C &kp F>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp C &kp F>, <&macro_release &kp LALT>\n        #endif\n      )\n\n        world_i_diaeresis: world_i_diaeresis {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_I_DIAERESIS\";\n            #binding-cells = <0>;\n            bindings = <&world_i_diaeresis_lower>, <&world_i_diaeresis_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n      /* î */ UNICODE(world_i_circumflex_lower,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp E &kp E &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp E &kp E>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp E &kp E>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* Î */ UNICODE(world_i_circumflex_upper,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp C &kp E &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp C &kp E>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp C &kp E>, <&macro_release &kp LALT>\n        #endif\n      )\n\n        world_i_circumflex: world_i_circumflex {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_I_CIRCUMFLEX\";\n            #binding-cells = <0>;\n            bindings = <&world_i_circumflex_lower>, <&world_i_circumflex_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n      /* ì */ UNICODE(world_i_grave_lower,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp E &kp C &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp E &kp C>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp E &kp C>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* Ì */ UNICODE(world_i_grave_upper,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp C &kp C &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp C &kp C>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp C &kp C>, <&macro_release &kp LALT>\n        #endif\n      )\n\n        world_i_grave: world_i_grave {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_I_GRAVE\";\n            #binding-cells = <0>;\n            bindings = <&world_i_grave_lower>, <&world_i_grave_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n      /* é */ UNICODE(world_e_acute_lower,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp E &kp N9 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp E &kp N9>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp E &kp KP_N9>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* É */ UNICODE(world_e_acute_upper,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp C &kp N9 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp C &kp N9>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp C &kp KP_N9>, <&macro_release &kp LALT>\n        #endif\n      )\n\n        world_e_acute: world_e_acute {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_E_ACUTE\";\n            #binding-cells = <0>;\n            bindings = <&world_e_acute_lower>, <&world_e_acute_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n      /* ë */ UNICODE(world_e_diaeresis_lower,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp E &kp B &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp E &kp B>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp E &kp B>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* Ë */ UNICODE(world_e_diaeresis_upper,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp C &kp B &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp C &kp B>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp C &kp B>, <&macro_release &kp LALT>\n        #endif\n      )\n\n        world_e_diaeresis: world_e_diaeresis {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_E_DIAERESIS\";\n            #binding-cells = <0>;\n            bindings = <&world_e_diaeresis_lower>, <&world_e_diaeresis_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n      /* ê */ UNICODE(world_e_circumflex_lower,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp E &kp A &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp E &kp A>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp E &kp A>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* Ê */ UNICODE(world_e_circumflex_upper,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp C &kp A &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp C &kp A>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp C &kp A>, <&macro_release &kp LALT>\n        #endif\n      )\n\n        world_e_circumflex: world_e_circumflex {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_E_CIRCUMFLEX\";\n            #binding-cells = <0>;\n            bindings = <&world_e_circumflex_lower>, <&world_e_circumflex_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n      /* è */ UNICODE(world_e_grave_lower,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp E &kp N8 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp E &kp N8>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp E &kp KP_N8>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* È */ UNICODE(world_e_grave_upper,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp C &kp N8 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp C &kp N8>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp C &kp KP_N8>, <&macro_release &kp LALT>\n        #endif\n      )\n\n        world_e_grave: world_e_grave {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_E_GRAVE\";\n            #binding-cells = <0>;\n            bindings = <&world_e_grave_lower>, <&world_e_grave_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n      /* æ */ UNICODE(world_e_ae_lower,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp E &kp N6 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp E &kp N6>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp E &kp KP_N6>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* Æ */ UNICODE(world_e_ae_upper,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp C &kp N6 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp C &kp N6>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp C &kp KP_N6>, <&macro_release &kp LALT>\n        #endif\n      )\n\n        world_e_ae: world_e_ae {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_E_AE\";\n            #binding-cells = <0>;\n            bindings = <&world_e_ae_lower>, <&world_e_ae_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n      /* á */ UNICODE(world_a_acute_lower,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp E &kp N1 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp E &kp N1>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp E &kp KP_N1>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* Á */ UNICODE(world_a_acute_upper,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp C &kp N1 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp C &kp N1>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp C &kp KP_N1>, <&macro_release &kp LALT>\n        #endif\n      )\n\n        world_a_acute: world_a_acute {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_A_ACUTE\";\n            #binding-cells = <0>;\n            bindings = <&world_a_acute_lower>, <&world_a_acute_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n      /* ä */ UNICODE(world_a_diaeresis_lower,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp E &kp N4 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp E &kp N4>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp E &kp KP_N4>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* Ä */ UNICODE(world_a_diaeresis_upper,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp C &kp N4 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp C &kp N4>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp C &kp KP_N4>, <&macro_release &kp LALT>\n        #endif\n      )\n\n        world_a_diaeresis: world_a_diaeresis {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_A_DIAERESIS\";\n            #binding-cells = <0>;\n            bindings = <&world_a_diaeresis_lower>, <&world_a_diaeresis_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n      /* â */ UNICODE(world_a_circumflex_lower,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp E &kp N2 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp E &kp N2>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp E &kp KP_N2>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* Â */ UNICODE(world_a_circumflex_upper,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp C &kp N2 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp C &kp N2>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp C &kp KP_N2>, <&macro_release &kp LALT>\n        #endif\n      )\n\n        world_a_circumflex: world_a_circumflex {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_A_CIRCUMFLEX\";\n            #binding-cells = <0>;\n            bindings = <&world_a_circumflex_lower>, <&world_a_circumflex_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n      /* à */ UNICODE(world_a_grave_lower,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp E &kp N0 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp E &kp N0>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp E &kp KP_N0>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* À */ UNICODE(world_a_grave_upper,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp C &kp N0 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp C &kp N0>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp C &kp KP_N0>, <&macro_release &kp LALT>\n        #endif\n      )\n\n        world_a_grave: world_a_grave {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_A_GRAVE\";\n            #binding-cells = <0>;\n            bindings = <&world_a_grave_lower>, <&world_a_grave_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n      /* ã */ UNICODE(world_a_tilde_lower,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp E &kp N3 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp E &kp N3>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp E &kp KP_N3>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* Ã */ UNICODE(world_a_tilde_upper,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp C &kp N3 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp C &kp N3>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp C &kp KP_N3>, <&macro_release &kp LALT>\n        #endif\n      )\n\n        world_a_tilde: world_a_tilde {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_A_TILDE\";\n            #binding-cells = <0>;\n            bindings = <&world_a_tilde_lower>, <&world_a_tilde_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n      /* å */ UNICODE(world_a_ring_lower,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp E &kp N5 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp E &kp N5>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp E &kp KP_N5>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* Å */ UNICODE(world_a_ring_upper,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp C &kp N5 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp C &kp N5>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp C &kp KP_N5>, <&macro_release &kp LALT>\n        #endif\n      )\n\n        world_a_ring: world_a_ring {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_A_RING\";\n            #binding-cells = <0>;\n            bindings = <&world_a_ring_lower>, <&world_a_ring_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n      /* ý */ UNICODE(world_y_acute_lower,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp F &kp D &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp F &kp D>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp F &kp D>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* Ý */ UNICODE(world_y_acute_upper,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp D &kp D &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp D &kp D>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp D &kp D>, <&macro_release &kp LALT>\n        #endif\n      )\n\n        world_y_acute: world_y_acute {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_Y_ACUTE\";\n            #binding-cells = <0>;\n            bindings = <&world_y_acute_lower>, <&world_y_acute_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n      /* ÿ */ UNICODE(world_y_diaeresis_lower,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp F &kp F &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp F &kp F>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp F &kp F>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* Ÿ */ UNICODE(world_y_diaeresis_upper,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp N7 &kp N8 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N1 &kp N7 &kp N8>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp KP_N7 &kp KP_N8>, <&macro_release &kp LALT>\n        #endif\n      )\n\n        world_y_diaeresis: world_y_diaeresis {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_Y_DIAERESIS\";\n            #binding-cells = <0>;\n            bindings = <&world_y_diaeresis_lower>, <&world_y_diaeresis_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n      /* ó */ UNICODE(world_o_acute_lower,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp F &kp N3 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp F &kp N3>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp F &kp KP_N3>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* Ó */ UNICODE(world_o_acute_upper,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp D &kp N3 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp D &kp N3>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp D &kp KP_N3>, <&macro_release &kp LALT>\n        #endif\n      )\n\n        world_o_acute: world_o_acute {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_O_ACUTE\";\n            #binding-cells = <0>;\n            bindings = <&world_o_acute_lower>, <&world_o_acute_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n      /* ö */ UNICODE(world_o_diaeresis_lower,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp F &kp N6 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp F &kp N6>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp F &kp KP_N6>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* Ö */ UNICODE(world_o_diaeresis_upper,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp D &kp N6 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp D &kp N6>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp D &kp KP_N6>, <&macro_release &kp LALT>\n        #endif\n      )\n\n        world_o_diaeresis: world_o_diaeresis {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_O_DIAERESIS\";\n            #binding-cells = <0>;\n            bindings = <&world_o_diaeresis_lower>, <&world_o_diaeresis_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n      /* ô */ UNICODE(world_o_circumflex_lower,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp F &kp N4 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp F &kp N4>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp F &kp KP_N4>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* Ô */ UNICODE(world_o_circumflex_upper,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp D &kp N4 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp D &kp N4>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp D &kp KP_N4>, <&macro_release &kp LALT>\n        #endif\n      )\n\n        world_o_circumflex: world_o_circumflex {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_O_CIRCUMFLEX\";\n            #binding-cells = <0>;\n            bindings = <&world_o_circumflex_lower>, <&world_o_circumflex_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n      /* ò */ UNICODE(world_o_grave_lower,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp F &kp N2 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp F &kp N2>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp F &kp KP_N2>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* Ò */ UNICODE(world_o_grave_upper,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp D &kp N2 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp D &kp N2>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp D &kp KP_N2>, <&macro_release &kp LALT>\n        #endif\n      )\n\n        world_o_grave: world_o_grave {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_O_GRAVE\";\n            #binding-cells = <0>;\n            bindings = <&world_o_grave_lower>, <&world_o_grave_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n      /* õ */ UNICODE(world_o_tilde_lower,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp F &kp N5 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp F &kp N5>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp F &kp KP_N5>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* Õ */ UNICODE(world_o_tilde_upper,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp D &kp N5 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp D &kp N5>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp D &kp KP_N5>, <&macro_release &kp LALT>\n        #endif\n      )\n\n        world_o_tilde: world_o_tilde {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_O_TILDE\";\n            #binding-cells = <0>;\n            bindings = <&world_o_tilde_lower>, <&world_o_tilde_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n      /* ø */ UNICODE(world_o_slash_lower,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp F &kp N8 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp F &kp N8>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp F &kp KP_N8>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* Ø */ UNICODE(world_o_slash_upper,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp D &kp N8 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp D &kp N8>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp D &kp KP_N8>, <&macro_release &kp LALT>\n        #endif\n      )\n\n        world_o_slash: world_o_slash {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_O_SLASH\";\n            #binding-cells = <0>;\n            bindings = <&world_o_slash_lower>, <&world_o_slash_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n      /* ú */ UNICODE(world_u_acute_lower,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp F &kp A &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp F &kp A>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp F &kp A>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* Ú */ UNICODE(world_u_acute_upper,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp D &kp A &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp D &kp A>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp D &kp A>, <&macro_release &kp LALT>\n        #endif\n      )\n\n        world_u_acute: world_u_acute {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_U_ACUTE\";\n            #binding-cells = <0>;\n            bindings = <&world_u_acute_lower>, <&world_u_acute_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n      /* ü */ UNICODE(world_u_diaeresis_lower,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp F &kp C &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp F &kp C>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp F &kp C>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* Ü */ UNICODE(world_u_diaeresis_upper,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp D &kp C &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp D &kp C>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp D &kp C>, <&macro_release &kp LALT>\n        #endif\n      )\n\n        world_u_diaeresis: world_u_diaeresis {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_U_DIAERESIS\";\n            #binding-cells = <0>;\n            bindings = <&world_u_diaeresis_lower>, <&world_u_diaeresis_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n      /* û */ UNICODE(world_u_circumflex_lower,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp F &kp B &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp F &kp B>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp F &kp B>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* Û */ UNICODE(world_u_circumflex_upper,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp D &kp B &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp D &kp B>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp D &kp B>, <&macro_release &kp LALT>\n        #endif\n      )\n\n        world_u_circumflex: world_u_circumflex {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_U_CIRCUMFLEX\";\n            #binding-cells = <0>;\n            bindings = <&world_u_circumflex_lower>, <&world_u_circumflex_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n      /* ù */ UNICODE(world_u_grave_lower,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp F &kp N9 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp F &kp N9>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp F &kp KP_N9>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* Ù */ UNICODE(world_u_grave_upper,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp D &kp N9 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp D &kp N9>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp D &kp KP_N9>, <&macro_release &kp LALT>\n        #endif\n      )\n\n        world_u_grave: world_u_grave {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_U_GRAVE\";\n            #binding-cells = <0>;\n            bindings = <&world_u_grave_lower>, <&world_u_grave_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n      /* ñ */ UNICODE(world_n_tilde_lower,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp F &kp N1 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp F &kp N1>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp F &kp KP_N1>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* Ñ */ UNICODE(world_n_tilde_upper,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp D &kp N1 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N0 &kp N0 &kp D &kp N1>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp D &kp KP_N1>, <&macro_release &kp LALT>\n        #endif\n      )\n\n        world_n_tilde: world_n_tilde {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_N_TILDE\";\n            #binding-cells = <0>;\n            bindings = <&world_n_tilde_lower>, <&world_n_tilde_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n    //\n    // transforms\n    //\n\n        world_i_base: world_i_base {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_I_BASE\";\n            #binding-cells = <0>;\n            bindings = <&world_i_acute>, <&world_i_LCTL>;\n            mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n        };\n\n        world_i_LCTL: world_i_LCTL {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_I_LCTL\";\n            #binding-cells = <0>;\n            bindings = <&world_i_diaeresis>, <&world_i_RCTL>;\n            mods = <(MOD_RCTL|MOD_RSFT)>;\n        };\n\n        world_i_RCTL: world_i_RCTL {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_I_RCTL\";\n            #binding-cells = <0>;\n            bindings = <&world_i_circumflex>, <&world_i_grave>;\n            mods = <(MOD_RSFT)>;\n        };\n\n        world_e_base: world_e_base {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_E_BASE\";\n            #binding-cells = <0>;\n            bindings = <&world_e_acute>, <&world_e_RALT>;\n            mods = <(MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n        };\n\n        world_e_RALT: world_e_RALT {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_E_RALT\";\n            #binding-cells = <0>;\n            bindings = <&world_e_ae>, <&world_e_LCTL>;\n            mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n        };\n\n        world_e_LCTL: world_e_LCTL {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_E_LCTL\";\n            #binding-cells = <0>;\n            bindings = <&world_e_diaeresis>, <&world_e_RCTL>;\n            mods = <(MOD_RCTL|MOD_RSFT)>;\n        };\n\n        world_e_RCTL: world_e_RCTL {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_E_RCTL\";\n            #binding-cells = <0>;\n            bindings = <&world_e_circumflex>, <&world_e_grave>;\n            mods = <(MOD_RSFT)>;\n        };\n\n        world_a_base: world_a_base {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_A_BASE\";\n            #binding-cells = <0>;\n            bindings = <&world_a_acute>, <&world_a_LALT>;\n            mods = <(MOD_LALT|MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n        };\n\n        world_a_LALT: world_a_LALT {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_A_LALT\";\n            #binding-cells = <0>;\n            bindings = <&world_a_tilde>, <&world_a_RALT>;\n            mods = <(MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n        };\n\n        world_a_RALT: world_a_RALT {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_A_RALT\";\n            #binding-cells = <0>;\n            bindings = <&world_a_ring>, <&world_a_LCTL>;\n            mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n        };\n\n        world_a_LCTL: world_a_LCTL {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_A_LCTL\";\n            #binding-cells = <0>;\n            bindings = <&world_a_diaeresis>, <&world_a_RCTL>;\n            mods = <(MOD_RCTL|MOD_RSFT)>;\n        };\n\n        world_a_RCTL: world_a_RCTL {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_A_RCTL\";\n            #binding-cells = <0>;\n            bindings = <&world_a_circumflex>, <&world_a_grave>;\n            mods = <(MOD_RSFT)>;\n        };\n\n        world_y_base: world_y_base {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_Y_BASE\";\n            #binding-cells = <0>;\n            bindings = <&world_y_acute>, <&world_y_diaeresis>;\n            mods = <(MOD_LCTL)>;\n        };\n\n        world_o_base: world_o_base {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_O_BASE\";\n            #binding-cells = <0>;\n            bindings = <&world_o_acute>, <&world_o_LALT>;\n            mods = <(MOD_LALT|MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n        };\n\n        world_o_LALT: world_o_LALT {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_O_LALT\";\n            #binding-cells = <0>;\n            bindings = <&world_o_tilde>, <&world_o_RALT>;\n            mods = <(MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n        };\n\n        world_o_RALT: world_o_RALT {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_O_RALT\";\n            #binding-cells = <0>;\n            bindings = <&world_o_slash>, <&world_o_LCTL>;\n            mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n        };\n\n        world_o_LCTL: world_o_LCTL {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_O_LCTL\";\n            #binding-cells = <0>;\n            bindings = <&world_o_diaeresis>, <&world_o_RCTL>;\n            mods = <(MOD_RCTL|MOD_RSFT)>;\n        };\n\n        world_o_RCTL: world_o_RCTL {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_O_RCTL\";\n            #binding-cells = <0>;\n            bindings = <&world_o_circumflex>, <&world_o_grave>;\n            mods = <(MOD_RSFT)>;\n        };\n\n        world_u_base: world_u_base {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_U_BASE\";\n            #binding-cells = <0>;\n            bindings = <&world_u_acute>, <&world_u_LCTL>;\n            mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n        };\n\n        world_u_LCTL: world_u_LCTL {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_U_LCTL\";\n            #binding-cells = <0>;\n            bindings = <&world_u_diaeresis>, <&world_u_RCTL>;\n            mods = <(MOD_RCTL|MOD_RSFT)>;\n        };\n\n        world_u_RCTL: world_u_RCTL {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_U_RCTL\";\n            #binding-cells = <0>;\n            bindings = <&world_u_circumflex>, <&world_u_grave>;\n            mods = <(MOD_RSFT)>;\n        };\n\n    //////////////////////////////////////////////////////////////////////////\n    //\n    // Emoji layer - modern age pictograms\n    //\n    //////////////////////////////////////////////////////////////////////////\n\n    //\n    // EMOJI_GENDER_SIGN_PRESET defines an Emoji gender sign for use as a\n    // convenient inward-rolling shortcut on the home row of the layer.\n    //\n    #define EMOJI_GENDER_SIGN_PRESET 0 // neutral\n    //#define EMOJI_GENDER_SIGN_PRESET 1 // male\n    //#define EMOJI_GENDER_SIGN_PRESET 2 // female\n\n    //\n    // EMOJI_SKIN_TONE_PRESET defines an Emoji skin tone for use as a\n    // convenient inward-rolling shortcut on the home row of the layer.\n    //\n    #define EMOJI_SKIN_TONE_PRESET 0 // neutral\n    //#define EMOJI_SKIN_TONE_PRESET 1 // light_skin_tone\n    //#define EMOJI_SKIN_TONE_PRESET 2 // medium_light_skin_tone\n    //#define EMOJI_SKIN_TONE_PRESET 3 // medium_skin_tone\n    //#define EMOJI_SKIN_TONE_PRESET 4 // medium_dark_skin_tone\n    //#define EMOJI_SKIN_TONE_PRESET 5 // dark_skin_tone\n\n    //\n    // EMOJI_HAIR_STYLE_PRESET defines an Emoji hair style for use as a\n    // convenient inward-rolling shortcut on the home row of the layer.\n    //\n    #define EMOJI_HAIR_STYLE_PRESET 0 // neutral\n    //#define EMOJI_HAIR_STYLE_PRESET 1 // bald\n    //#define EMOJI_HAIR_STYLE_PRESET 2 // red_hair\n    //#define EMOJI_HAIR_STYLE_PRESET 3 // curly_hair\n    //#define EMOJI_HAIR_STYLE_PRESET 4 // white_hair\n\n    //\n    // NOTE: edit the emoji.yaml file and run `rake` to generate this:\n    //\n\n      /* ‍ */ UNICODE(emoji_zwj,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N2 &kp N0 &kp N0 &kp D &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N2 &kp N0 &kp N0 &kp D>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N2 &kp KP_N0 &kp KP_N0 &kp D>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* ♂️ */ UNICODE(emoji_male_sign,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N2 &kp N6 &kp N4 &kp N2 &kp ENTER>, <&macro_wait_time UNICODE_SEQ_DELAY>, <&kp LC(LS(U)) &kp F &kp E &kp N0 &kp F &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N2 &kp N6 &kp N4 &kp N2>, <&macro_release &kp LALT>, <&macro_wait_time UNICODE_SEQ_DELAY>, <&macro_press &kp LALT>, <&macro_tap &kp F &kp E &kp N0 &kp F>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N2 &kp KP_N6 &kp KP_N4 &kp KP_N2>, <&macro_release &kp LALT>, <&macro_wait_time UNICODE_SEQ_DELAY>, <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp F &kp E &kp KP_N0 &kp F>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* ♀️ */ UNICODE(emoji_female_sign,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N2 &kp N6 &kp N4 &kp N0 &kp ENTER>, <&macro_wait_time UNICODE_SEQ_DELAY>, <&kp LC(LS(U)) &kp F &kp E &kp N0 &kp F &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N2 &kp N6 &kp N4 &kp N0>, <&macro_release &kp LALT>, <&macro_wait_time UNICODE_SEQ_DELAY>, <&macro_press &kp LALT>, <&macro_tap &kp F &kp E &kp N0 &kp F>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N2 &kp KP_N6 &kp KP_N4 &kp KP_N0>, <&macro_release &kp LALT>, <&macro_wait_time UNICODE_SEQ_DELAY>, <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp F &kp E &kp KP_N0 &kp F>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* ➡️ */ UNICODE(emoji_right_arrow,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N2 &kp N7 &kp A &kp N1 &kp ENTER>, <&macro_wait_time UNICODE_SEQ_DELAY>, <&kp LC(LS(U)) &kp F &kp E &kp N0 &kp F &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N2 &kp N7 &kp A &kp N1>, <&macro_release &kp LALT>, <&macro_wait_time UNICODE_SEQ_DELAY>, <&macro_press &kp LALT>, <&macro_tap &kp F &kp E &kp N0 &kp F>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N2 &kp KP_N7 &kp A &kp KP_N1>, <&macro_release &kp LALT>, <&macro_wait_time UNICODE_SEQ_DELAY>, <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp F &kp E &kp KP_N0 &kp F>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* ⬅️ */ UNICODE(emoji_left_arrow,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N2 &kp B &kp N0 &kp N5 &kp ENTER>, <&macro_wait_time UNICODE_SEQ_DELAY>, <&kp LC(LS(U)) &kp F &kp E &kp N0 &kp F &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N2 &kp B &kp N0 &kp N5>, <&macro_release &kp LALT>, <&macro_wait_time UNICODE_SEQ_DELAY>, <&macro_press &kp LALT>, <&macro_tap &kp F &kp E &kp N0 &kp F>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N2 &kp B &kp KP_N0 &kp KP_N5>, <&macro_release &kp LALT>, <&macro_wait_time UNICODE_SEQ_DELAY>, <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp F &kp E &kp KP_N0 &kp F>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 🏻 */ UNICODE(emoji_light_skin_tone,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N3 &kp F &kp B &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N3 &kp F &kp B>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N3 &kp F &kp B>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 🏼 */ UNICODE(emoji_medium_light_skin_tone,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N3 &kp F &kp C &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N3 &kp F &kp C>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N3 &kp F &kp C>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 🏽 */ UNICODE(emoji_medium_skin_tone,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N3 &kp F &kp D &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N3 &kp F &kp D>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N3 &kp F &kp D>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 🏾 */ UNICODE(emoji_medium_dark_skin_tone,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N3 &kp F &kp E &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N3 &kp F &kp E>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N3 &kp F &kp E>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 🏿 */ UNICODE(emoji_dark_skin_tone,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N3 &kp F &kp F &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N3 &kp F &kp F>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N3 &kp F &kp F>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 🍼 */ UNICODE(emoji_baby_bottle,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N3 &kp N7 &kp C &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N3 &kp N7 &kp C>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N3 &kp KP_N7 &kp C>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 👶 */ UNICODE(emoji_baby,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N4 &kp N7 &kp N6 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N4 &kp N7 &kp N6>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N4 &kp KP_N7 &kp KP_N6>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 👦 */ UNICODE(emoji_boy,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N4 &kp N6 &kp N6 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N4 &kp N6 &kp N6>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N4 &kp KP_N6 &kp KP_N6>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 👧 */ UNICODE(emoji_girl,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N4 &kp N6 &kp N7 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N4 &kp N6 &kp N7>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N4 &kp KP_N6 &kp KP_N7>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 👨 */ UNICODE(emoji_man,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N4 &kp N6 &kp N8 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N4 &kp N6 &kp N8>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N4 &kp KP_N6 &kp KP_N8>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 👩 */ UNICODE(emoji_woman,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N4 &kp N6 &kp N9 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N4 &kp N6 &kp N9>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N4 &kp KP_N6 &kp KP_N9>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 👴 */ UNICODE(emoji_old_man,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N4 &kp N7 &kp N4 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N4 &kp N7 &kp N4>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N4 &kp KP_N7 &kp KP_N4>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 👵 */ UNICODE(emoji_old_woman,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N4 &kp N7 &kp N5 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N4 &kp N7 &kp N5>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N4 &kp KP_N7 &kp KP_N5>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 🦳 */ UNICODE(emoji_white_hair,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N9 &kp B &kp N3 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N9 &kp B &kp N3>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N9 &kp B &kp KP_N3>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 🦱 */ UNICODE(emoji_curly_hair,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N9 &kp B &kp N1 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N9 &kp B &kp N1>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N9 &kp B &kp KP_N1>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 🦰 */ UNICODE(emoji_red_hair,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N9 &kp B &kp N0 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N9 &kp B &kp N0>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N9 &kp B &kp KP_N0>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 🦲 */ UNICODE(emoji_bald,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N9 &kp B &kp N2 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N9 &kp B &kp N2>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N9 &kp B &kp KP_N2>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 🌑 */ UNICODE(emoji_new_moon,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N3 &kp N1 &kp N1 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N3 &kp N1 &kp N1>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N3 &kp KP_N1 &kp KP_N1>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 🌒 */ UNICODE(emoji_waxing_crescent_moon,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N3 &kp N1 &kp N2 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N3 &kp N1 &kp N2>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N3 &kp KP_N1 &kp KP_N2>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 🌓 */ UNICODE(emoji_first_quarter_moon,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N3 &kp N1 &kp N3 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N3 &kp N1 &kp N3>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N3 &kp KP_N1 &kp KP_N3>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 🌔 */ UNICODE(emoji_waxing_gibbous_moon,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N3 &kp N1 &kp N4 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N3 &kp N1 &kp N4>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N3 &kp KP_N1 &kp KP_N4>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 🌕 */ UNICODE(emoji_full_moon,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N3 &kp N1 &kp N5 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N3 &kp N1 &kp N5>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N3 &kp KP_N1 &kp KP_N5>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 🎉 */ UNICODE(emoji_tada,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N3 &kp N8 &kp N9 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N3 &kp N8 &kp N9>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N3 &kp KP_N8 &kp KP_N9>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 🔥 */ UNICODE(emoji_fire,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N5 &kp N2 &kp N5 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N5 &kp N2 &kp N5>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N5 &kp KP_N2 &kp KP_N5>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* ️❤️ */ UNICODE(emoji_heart,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp F &kp E &kp N0 &kp F &kp ENTER>, <&macro_wait_time UNICODE_SEQ_DELAY>, <&kp LC(LS(U)) &kp N2 &kp N7 &kp N6 &kp N4 &kp ENTER>, <&kp LC(LS(U)) &kp F &kp E &kp N0 &kp F &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp F &kp E &kp N0 &kp F>, <&macro_release &kp LALT>, <&macro_wait_time UNICODE_SEQ_DELAY>, <&macro_press &kp LALT>, <&macro_tap &kp N2 &kp N7 &kp N6 &kp N4>, <&macro_release &kp LALT>, <&macro_press &kp LALT>, <&macro_tap &kp F &kp E &kp N0 &kp F>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp F &kp E &kp KP_N0 &kp F>, <&macro_release &kp LALT>, <&macro_wait_time UNICODE_SEQ_DELAY>, <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N2 &kp KP_N7 &kp KP_N6 &kp KP_N4>, <&macro_release &kp LALT>, <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp F &kp E &kp KP_N0 &kp F>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 💪 */ UNICODE(emoji_muscle,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N4 &kp A &kp A &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N4 &kp A &kp A>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N4 &kp A &kp A>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 🧗 */ UNICODE(emoji_person_climbing,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N9 &kp D &kp N7 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N9 &kp D &kp N7>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N9 &kp D &kp KP_N7>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 🚀 */ UNICODE(emoji_rocket,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N6 &kp N8 &kp N0 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N6 &kp N8 &kp N0>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N6 &kp KP_N8 &kp KP_N0>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 😎 */ UNICODE(emoji_sunglasses,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N6 &kp N0 &kp E &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N6 &kp N0 &kp E>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N6 &kp KP_N0 &kp E>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 🤩 */ UNICODE(emoji_star_struck,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N9 &kp N2 &kp N9 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N9 &kp N2 &kp N9>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N9 &kp KP_N2 &kp KP_N9>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 😂 */ UNICODE(emoji_joy,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N6 &kp N0 &kp N2 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N6 &kp N0 &kp N2>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N6 &kp KP_N0 &kp KP_N2>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 😰 */ UNICODE(emoji_cold_sweat,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N6 &kp N3 &kp N0 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N6 &kp N3 &kp N0>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N6 &kp KP_N3 &kp KP_N0>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 😱 */ UNICODE(emoji_scream,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N6 &kp N3 &kp N1 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N6 &kp N3 &kp N1>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N6 &kp KP_N3 &kp KP_N1>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 🤯 */ UNICODE(emoji_exploding_head,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N9 &kp N2 &kp F &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N9 &kp N2 &kp F>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N9 &kp KP_N2 &kp F>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 🫰 */ UNICODE(emoji_snap_fingers,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp A &kp F &kp N0 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp A &kp F &kp N0>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp A &kp F &kp KP_N0>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 👌 */ UNICODE(emoji_ok_hand,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N4 &kp N4 &kp C &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N4 &kp N4 &kp C>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N4 &kp KP_N4 &kp C>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 🙏 */ UNICODE(emoji_pray,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N6 &kp N4 &kp F &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N6 &kp N4 &kp F>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N6 &kp KP_N4 &kp F>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 😅 */ UNICODE(emoji_sweat_smile,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N6 &kp N0 &kp N5 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N6 &kp N0 &kp N5>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N6 &kp KP_N0 &kp KP_N5>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 😞 */ UNICODE(emoji_disappointed,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N6 &kp N1 &kp E &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N6 &kp N1 &kp E>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N6 &kp KP_N1 &kp E>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 🤔 */ UNICODE(emoji_thinking,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N9 &kp N1 &kp N4 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N9 &kp N1 &kp N4>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N9 &kp KP_N1 &kp KP_N4>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 💁 */ UNICODE(emoji_person_tipping_hand,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N4 &kp N8 &kp N1 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N4 &kp N8 &kp N1>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N4 &kp KP_N8 &kp KP_N1>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 🙆 */ UNICODE(emoji_person_gesturing_ok,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N6 &kp N4 &kp N6 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N6 &kp N4 &kp N6>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N6 &kp KP_N4 &kp KP_N6>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 🙇 */ UNICODE(emoji_person_bowing,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N6 &kp N4 &kp N7 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N6 &kp N4 &kp N7>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N6 &kp KP_N4 &kp KP_N7>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 🙋 */ UNICODE(emoji_person_raising_hand,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N6 &kp N4 &kp B &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N6 &kp N4 &kp B>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N6 &kp KP_N4 &kp B>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 🙅 */ UNICODE(emoji_person_gesturing_no,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N6 &kp N4 &kp N5 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N6 &kp N4 &kp N5>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N6 &kp KP_N4 &kp KP_N5>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 🤷 */ UNICODE(emoji_person_shrugging,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N9 &kp N3 &kp N7 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N9 &kp N3 &kp N7>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N9 &kp KP_N3 &kp KP_N7>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* ✅ */ UNICODE(emoji_checkoff,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N2 &kp N7 &kp N0 &kp N5 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N2 &kp N7 &kp N0 &kp N5>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N2 &kp KP_N7 &kp KP_N0 &kp KP_N5>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 💯 */ UNICODE(emoji_100,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N4 &kp A &kp F &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N4 &kp A &kp F>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N4 &kp A &kp F>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* ⚠️ */ UNICODE(emoji_warning,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N2 &kp N6 &kp A &kp N0 &kp ENTER>, <&macro_wait_time UNICODE_SEQ_DELAY>, <&kp LC(LS(U)) &kp F &kp E &kp N0 &kp F &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N2 &kp N6 &kp A &kp N0>, <&macro_release &kp LALT>, <&macro_wait_time UNICODE_SEQ_DELAY>, <&macro_press &kp LALT>, <&macro_tap &kp F &kp E &kp N0 &kp F>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N2 &kp KP_N6 &kp A &kp KP_N0>, <&macro_release &kp LALT>, <&macro_wait_time UNICODE_SEQ_DELAY>, <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp F &kp E &kp KP_N0 &kp F>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* ❌ */ UNICODE(emoji_x,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N2 &kp N7 &kp N4 &kp C &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N2 &kp N7 &kp N4 &kp C>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N2 &kp KP_N7 &kp KP_N4 &kp C>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* ❓ */ UNICODE(emoji_question,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N2 &kp N7 &kp N5 &kp N3 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N2 &kp N7 &kp N5 &kp N3>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N2 &kp KP_N7 &kp KP_N5 &kp KP_N3>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 🧑‍🚀 */ UNICODE(emoji_astronaut,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N9 &kp D &kp N1 &kp ENTER>, <&macro_wait_time UNICODE_SEQ_DELAY>, <&kp LC(LS(U)) &kp N2 &kp N0 &kp N0 &kp D &kp ENTER>, <&kp LC(LS(U)) &kp N1 &kp F &kp N6 &kp N8 &kp N0 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N9 &kp D &kp N1>, <&macro_release &kp LALT>, <&macro_wait_time UNICODE_SEQ_DELAY>, <&macro_press &kp LALT>, <&macro_tap &kp N2 &kp N0 &kp N0 &kp D>, <&macro_release &kp LALT>, <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N6 &kp N8 &kp N0>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N9 &kp D &kp KP_N1>, <&macro_release &kp LALT>, <&macro_wait_time UNICODE_SEQ_DELAY>, <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N2 &kp KP_N0 &kp KP_N0 &kp D>, <&macro_release &kp LALT>, <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N6 &kp KP_N8 &kp KP_N0>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 🤓 */ UNICODE(emoji_nerd,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N9 &kp N1 &kp N3 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N9 &kp N1 &kp N3>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N9 &kp KP_N1 &kp KP_N3>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* ✨ */ UNICODE(emoji_sparkles,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N2 &kp N7 &kp N2 &kp N8 &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N2 &kp N7 &kp N2 &kp N8>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N2 &kp KP_N7 &kp KP_N2 &kp KP_N8>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 🙌 */ UNICODE(emoji_raised_hands,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N6 &kp N4 &kp C &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N6 &kp N4 &kp C>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N6 &kp KP_N4 &kp C>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* ☝️ */ UNICODE(emoji_point_up,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N2 &kp N6 &kp N1 &kp D &kp ENTER>, <&macro_wait_time UNICODE_SEQ_DELAY>, <&kp LC(LS(U)) &kp F &kp E &kp N0 &kp F &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N2 &kp N6 &kp N1 &kp D>, <&macro_release &kp LALT>, <&macro_wait_time UNICODE_SEQ_DELAY>, <&macro_press &kp LALT>, <&macro_tap &kp F &kp E &kp N0 &kp F>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N2 &kp KP_N6 &kp KP_N1 &kp D>, <&macro_release &kp LALT>, <&macro_wait_time UNICODE_SEQ_DELAY>, <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp F &kp E &kp KP_N0 &kp F>, <&macro_release &kp LALT>\n        #endif\n      )\n\n      /* 👍 */ UNICODE(emoji_thumbs_up,\n        #if UNICODE_TARGET_OS == 1\n          <&kp LC(LS(U)) &kp N1 &kp F &kp N4 &kp N4 &kp D &kp ENTER>\n        #elif UNICODE_TARGET_OS == 2\n          <&macro_press &kp LALT>, <&macro_tap &kp N1 &kp F &kp N4 &kp N4 &kp D>, <&macro_release &kp LALT>\n        #elif UNICODE_TARGET_OS == 3\n          <&macro_press &kp LALT>, <&macro_tap &kp KP_PLUS &kp KP_N1 &kp F &kp KP_N4 &kp KP_N4 &kp D>, <&macro_release &kp LALT>\n        #endif\n      )\n\n};\n\n/*HACK*/};\n    #if EMOJI_GENDER_SIGN_PRESET == 0\n      emoji_gender_sign_preset: &none {};\n    #elif EMOJI_GENDER_SIGN_PRESET == 1\n      emoji_gender_sign_preset: &emoji_male_sign {};\n    #elif EMOJI_GENDER_SIGN_PRESET == 2\n      emoji_gender_sign_preset: &emoji_female_sign {};\n    #endif\n    #if EMOJI_SKIN_TONE_PRESET == 0\n      emoji_skin_tone_preset: &none {};\n    #elif EMOJI_SKIN_TONE_PRESET == 1\n      emoji_skin_tone_preset: &emoji_light_skin_tone {};\n    #elif EMOJI_SKIN_TONE_PRESET == 2\n      emoji_skin_tone_preset: &emoji_medium_light_skin_tone {};\n    #elif EMOJI_SKIN_TONE_PRESET == 3\n      emoji_skin_tone_preset: &emoji_medium_skin_tone {};\n    #elif EMOJI_SKIN_TONE_PRESET == 4\n      emoji_skin_tone_preset: &emoji_medium_dark_skin_tone {};\n    #elif EMOJI_SKIN_TONE_PRESET == 5\n      emoji_skin_tone_preset: &emoji_dark_skin_tone {};\n    #endif\n    #if EMOJI_HAIR_STYLE_PRESET == 0\n      emoji_hair_style_preset: &none {};\n    #elif EMOJI_HAIR_STYLE_PRESET == 1\n      emoji_hair_style_preset: &emoji_bald {};\n    #elif EMOJI_HAIR_STYLE_PRESET == 2\n      emoji_hair_style_preset: &emoji_red_hair {};\n    #elif EMOJI_HAIR_STYLE_PRESET == 3\n      emoji_hair_style_preset: &emoji_curly_hair {};\n    #elif EMOJI_HAIR_STYLE_PRESET == 4\n      emoji_hair_style_preset: &emoji_white_hair {};\n    #endif\n/*HACK*//{",
  "config_parameters": []
}