{
  "keyboard": "glove80",
  "uuid": "",
  "date": 1697533198,
  "creator": "",
  "parent_uuid": "e3c052cb-702a-4f22-ae33-5a31c7a1c89d",
  "firmware_api_version": "1",
  "locale": "en-US",
  "title": "Sunaku's Keymap v25 (Engram)",
  "notes": "Sunaku's Keymap v25 featuring Arno's Engram 2.0 layout and legendary Miryoku\n- for setup instructions: https://github.com/sunaku/glove80-keymaps#readme\n- for release notes: https://github.com/sunaku/glove80-keymaps/releases/tag/v25\n- for upgrade diffs: https://github.com/sunaku/glove80-keymaps/compare/v24...v25\n\nSummary:\nHey everyone, I'm pleased to announce a new version 25 of my Glove80 keymaps featuring a World layer for international characters and an Emoji layer. 😎👍✨\n\nChanges:\n- Engram layout: add \"engram_\" prefix for all ZMK mod-morph macros; simplify ordinals from English words to numerical digits.\n- Cursor layer: easier one-handed SelectAll -> Cut/Copy/Paste; put undo/redo on same upper row as right hand; adjust find keys accordingly.\n- Thumb keys: disable retro-tap for all thumb keys except spacebar.  The backspace thumb key for cursor layer was accidentally navigating the browser back in history for me sometimes.\n- Thumb keys: increase hold time to 200ms for non-space thumb keys to avoid layer activation where they map you into &none.\n- Thumb keys: increase repeat decay time to 300ms for non-space thumb keys so it's easier to hold backspace for repetition.\n- Miryoku layers: moved `&reset` key to top inner corner so that the bottom outer corner can be used for one-handed usage on the cursor layer.\n- Rename INDEX* settings to SHIFT* because it's semantically shift: it needs to be fast regardless of the finger it's on (not just the indexes).\n- Rename &thumb_space to &space for similar semantic reasons as above.\n- Cursor layer: change `&none` assignment to `&trans` for symbolic keys on the right half of the keyboard.  This lets me tap Space then / to produce \" /\" in an odd timing corner case.\n- Symbol layer: swap backtick and double quotes so that I can inward roll from equals to double quote in one swoop:\n    * `(\"` for starting a string value argument for a function call.\n    * `=\"` for HTML attributes and Bourne shell variable assignments.\n- Lower layer: add LALT on pinky shift to type Windows Alt key codes.\n- Add Emoji layer (#11) activated by left thumb's satellite key.\n- Add World layer (#12) activated by right thumb's satellite key.",
  "tags": [
    "sunaku",
    "engrammer",
    "engram",
    "miryoku",
    "vim",
    "gaming",
    "typing"
  ],
  "unlisted": false,
  "layer_names": [
    "Base",
    "Lower",
    "Magic",
    "Cursor",
    "Number",
    "Function",
    "Symbol",
    "Mouse",
    "System",
    "Gaming",
    "Typing",
    "Emoji",
    "World"
  ],
  "layers": [
    [
      {
        "value": "&kp",
        "params": [
          {
            "value": "F1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F10",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LBKT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_7",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_8",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_9",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_0",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RBKT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_at",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "B",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&homey_left RALT Y",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "O",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "U",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_apos",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_dquote",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "L",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "D",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&homey_right RALT W",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "V",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Z",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&cappy",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&homey_left LGUI C",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&homey_left LALT I",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&homey_left LCTRL E",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&shift_left LSHFT A",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_comma",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_period",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&shift_right LSHFT H",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&homey_right LCTRL T",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&homey_right LALT S",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&homey_right LGUI N",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Q",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "G",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "X",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "J",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb 5 ESC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LEFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RIGHT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb 8 ENTER",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_question",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "R",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "M",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "P",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "HOME",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_DN",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb 11 END",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb 3 BACKSPACE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb 4 DELETE",
            "params": []
          }
        ]
      },
      {
        "value": "&lower",
        "params": []
      },
      {
        "value": "&lower",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb 7 TAB",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&space 6 SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb 12 LPAR",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_hash",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_slash",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RPAR",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      }
    ],
    [
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_BRI_DN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_BRI_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_PREV",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_NEXT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_PP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_MUTE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_VOL_DN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_VOL_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PAUSE_BREAK",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "HOME",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LEFT_PARENTHESIS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_NUM",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_EQUAL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_SLASH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_MULTIPLY",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PRINTSCREEN",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "UP_ARROW",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "END",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RIGHT_PARENTHESIS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SCROLLLOCK",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LEFT_ARROW",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOWN_ARROW",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RIGHT_ARROW",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PERCENT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_PLUS",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LALT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K_APP",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F11",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F12",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_DN",
            "params": []
          }
        ]
      },
      {
        "value": "&tog",
        "params": [
          {
            "value": 5,
            "params": []
          }
        ]
      },
      {
        "value": "&tog",
        "params": [
          {
            "value": 9,
            "params": []
          }
        ]
      },
      {
        "value": "&tog",
        "params": [
          {
            "value": 10,
            "params": []
          }
        ]
      },
      {
        "value": "&tog",
        "params": [
          {
            "value": 10,
            "params": []
          }
        ]
      },
      {
        "value": "&tog",
        "params": [
          {
            "value": 9,
            "params": []
          }
        ]
      },
      {
        "value": "&tog",
        "params": [
          {
            "value": 8,
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_ENTER",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&magic",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "CAPS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "INS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F11",
            "params": []
          }
        ]
      },
      {
        "value": "&tog",
        "params": [
          {
            "value": 11,
            "params": []
          }
        ]
      },
      {
        "value": "&tog",
        "params": [
          {
            "value": 3,
            "params": []
          }
        ]
      },
      {
        "value": "&tog",
        "params": [
          {
            "value": 4,
            "params": []
          }
        ]
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 0,
            "params": []
          }
        ]
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 0,
            "params": []
          }
        ]
      },
      {
        "value": "&tog",
        "params": [
          {
            "value": 7,
            "params": []
          }
        ]
      },
      {
        "value": "&tog",
        "params": [
          {
            "value": 6,
            "params": []
          }
        ]
      },
      {
        "value": "&tog",
        "params": [
          {
            "value": 12,
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N0",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_DOT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_ENTER",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "&bt",
        "params": [
          {
            "value": "BT_CLR",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&bt",
        "params": [
          {
            "value": "BT_CLR_ALL",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SPI",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SAI",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_HUI",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_BRI",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_TOG",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&bootloader",
        "params": []
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SPD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SAD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_HUD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_BRD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_EFF",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&bootloader",
        "params": []
      },
      {
        "value": "&reset",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&bt_2",
        "params": []
      },
      {
        "value": "&bt_3",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&reset",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&bt_0",
        "params": []
      },
      {
        "value": "&bt_1",
        "params": []
      },
      {
        "value": "&out",
        "params": [
          {
            "value": "OUT_USB",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      }
    ],
    [
      {
        "value": "&bootloader",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&reset",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LS",
            "params": [
              {
                "value": "LC",
                "params": [
                  {
                    "value": "Z",
                    "params": []
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LS",
            "params": [
              {
                "value": "LC",
                "params": [
                  {
                    "value": "Y",
                    "params": []
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LS",
            "params": [
              {
                "value": "LC",
                "params": [
                  {
                    "value": "Z",
                    "params": []
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LS",
            "params": [
              {
                "value": "LC",
                "params": [
                  {
                    "value": "Y",
                    "params": []
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "K",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RALT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "Z",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "Y",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "X",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "X",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSPC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "Z",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "Y",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DEL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "K",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "L",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LGUI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LALT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LCTRL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "C",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "C",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LEFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RIGHT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "L",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "J",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "F",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&select_word",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&select_line",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "A",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "V",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "L",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&extend_line",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&extend_word",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "V",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "HOME",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_DN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "END",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "J",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "H",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LS",
            "params": [
              {
                "value": "LC",
                "params": [
                  {
                    "value": "G",
                    "params": []
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&extend_word",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&extend_line",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "G",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 0,
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "A",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&select_line",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&select_word",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "F",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LS",
            "params": [
              {
                "value": "LC",
                "params": [
                  {
                    "value": "G",
                    "params": []
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "G",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "H",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "INS",
            "params": []
          }
        ]
      }
    ],
    [
      {
        "value": "&bootloader",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&reset",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TILDE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "CARET",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "HASH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DLLR",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "AT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EXCL",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RALT",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PRCNT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COLON",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_NUM",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LGUI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LALT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LCTRL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PLUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "J",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EQUAL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "STAR",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "FSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LS",
            "params": [
              {
                "value": "G",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 0,
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N0",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PIPE",
            "params": []
          }
        ]
      }
    ],
    [
      {
        "value": "&bootloader",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&reset",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_MEDIA_HOME",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_PLAY",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_PREV",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_NEXT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_STOP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_EJECT",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RALT",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K_WWW",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F10",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F13",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "CAPS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LGUI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LALT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LCTRL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K_CALC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F11",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F14",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_PREV",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_NEXT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_PP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_AL_FILES",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F12",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F15",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 0,
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_MUTE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_VOL_DN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_VOL_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_BRI_MAX",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_BRI_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_BRI_DN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_BRI_MIN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_BRI_AUTO",
            "params": []
          }
        ]
      }
    ],
    [
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&reset",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&bootloader",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LPAR",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RPAR",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SEMI",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TILDE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LBRC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GRAVE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DQT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RBRC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "QMARK",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RALT",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "HASH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "CARET",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EQUAL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "UNDER",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DLLR",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "STAR",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LCTRL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LALT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LGUI",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EXCL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PIPE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "FSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "STAR",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SQT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "AMPS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PLUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PRCNT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COLON",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "AT",
            "params": []
          }
        ]
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 0,
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      }
    ],
    [
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&reset",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&bootloader",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RALT",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LCTRL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LALT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LGUI",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 0,
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      }
    ],
    [
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&reset",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&bootloader",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_HUD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_HUI",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RALT",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_TOG",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_EFR",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_BRD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_BRI",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_EFF",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LCTRL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LALT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LGUI",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SPD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SAD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SAI",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SPI",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K_LOCK",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_SLEEP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_PWR",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PSCRN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SLCK",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PAUSE_BREAK",
            "params": []
          }
        ]
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 0,
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      }
    ],
    [
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GRAVE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "B",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "M",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SQT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "B",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "M",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "FSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "T",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TAB",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Q",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "W",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "E",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "R",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "T",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Y",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "U",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "I",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "O",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "P",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "G",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "A",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "S",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "D",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "ESC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RET",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LGUI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSPC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DEL",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "G",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "H",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "J",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "L",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SEMI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "V",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LCTRL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Z",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "X",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LALT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PAUSE_BREAK",
            "params": []
          }
        ]
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 0,
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Y",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "W",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "I",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "E",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "A",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "H",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "T",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "S",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "ESC",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RET",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSPC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DEL",
            "params": []
          }
        ]
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 0,
            "params": []
          }
        ]
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 0,
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TAB",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "&bootloader",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&reset",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_new_moon",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_waxing_crescent_moon",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_first_quarter_moon",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_waxing_gibbous_moon",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_full_moon",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_tada",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_heart",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_fire",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_muscle",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_person_climbing",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_rocket",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_sunglasses",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_heart_eyes",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_star_struck",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_tear_smile",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_scream",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_astronaut",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_snap_fingers",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_ok_hand",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_pray",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_sweat_smile",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_cold_sweat",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_exploding_head",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_nerd",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_raised_hands",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_sparkles",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_person_tipping_hand",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_person_gesturing_ok",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_person_bowing",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_person_raising_hand",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_person_gesturing_no",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_person_shrugging",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 0,
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_thinking",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_thumbs_down",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_thumbs_up",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_checkoff",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_100",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_warning",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_x",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_question",
            "params": []
          }
        ]
      }
    ],
    [
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&reset",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&bootloader",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_degree_sign",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_y_base",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_o_base",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_u_base",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LALT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RALT",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_c_cedilla",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_i_base",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_e_base",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_a_base",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LCTRL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RCTRL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_quote_left",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_question_left",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_exclaim_left",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_quote_right",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_section_sign",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_paragraph_sign",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_o_ordinal",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_a_ordinal",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 0,
            "params": []
          }
        ]
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 0,
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      }
    ]
  ],
  "custom_defined_behaviors": "//////////////////////////////////////////////////////////////////////\n// NOTE: Use the `#define` settings below to customize this keymap! //\n//////////////////////////////////////////////////////////////////////\n// IMPORTANT: You need to set Firmware Version to \"pr19.zephyr-3-2\" //\n// under Settings > Advanced Settings in the Glove80 Layout Editor  //\n// if you want to use the `hold-trigger-on-release` feature in ZMK. //\n//////////////////////////////////////////////////////////////////////\n// CAUTION: PR19 firmware is not production quality; it has issues: //\n// https://discord.com/channels/877392805654306816/1137025078979203142\n//////////////////////////////////////////////////////////////////////\n//\n// Sunaku's Keymap v25 featuring Arno's Engram 2.0 layout with Miryoku\n// - https://github.com/sunaku/glove80-keymaps\n//\n//////////////////////////////////////////////////////////////////////\n\nbehaviors {\n\n    //////////////////////////////////////////////////////////////////\n    //\n    // Miryoku layers and home row mods (ported from my QMK endgame)\n    // - https://sunaku.github.io/home-row-mods.html#porting-to-zmk\n    // - https://github.com/urob/zmk-config#timeless-homerow-mods\n    //\n    //////////////////////////////////////////////////////////////////\n\n    //\n    // HOMEY_HOLDING_TYPE defines the flavor of ZMK hold-tap behavior to use\n    // for the pinky, ring, and middle fingers (which are assigned to Super,\n    // Alt, and Ctrl respectively in the Miryoku system) on home row keys.\n    //\n    #define HOMEY_HOLDING_TYPE \"tap-preferred\"\n\n    //\n    // HOMEY_HOLDING_TIME defines how long you need to hold (milliseconds)\n    // home row mod keys in order to send their modifiers to the computer\n    // (i.e. \"register\" them) for mod-click mouse usage (e.g. Ctrl-Click).\n    //\n    #define HOMEY_HOLDING_TIME 270 // TAPPING_TERM + ALLOW_CROSSOVER_AFTER\n\n    //\n    // HOMEY_STREAK_DECAY defines how long you need to wait (milliseconds)\n    // after typing before you can use home row mods again.  It prevents\n    // unintended activation of home row mods when you're actively typing.\n    //\n    #define HOMEY_STREAK_DECAY 170 // global-quick-tap-ms\n\n    //\n    // SHIFT_HOLDING_TYPE defines the flavor of ZMK hold-tap behavior to use\n    // for index fingers (which Miryoku assigns to Shift) on home row keys.\n    //\n    // NOTE: The \"tap-preferred\" flavor of ZMK hold-tap for index finger keys\n    // allows faster activation of the Shift modifier (without having to wait\n    // for the modified key to be released as the \"balanced\" flavor requires).\n    // Typing streaks and the `hold-trigger-on-release` setting are disabled\n    // for the index fingers so as not to hinder their speed and dexterity.\n    //\n    #define SHIFT_HOLDING_TYPE \"tap-preferred\"\n\n    //\n    // SHIFT_HOLDING_TIME defines how long you need to hold (milliseconds)\n    // index finger keys in order to send their modifiers to the computer\n    // (i.e. \"register\" them) for mod-click mouse usage (e.g. Shift-Click).\n    //\n    // CAUTION: You'll need to perform inward rolls from pinky->ring->middle\n    // fingers toward the index fingers when activating multiple modifiers\n    // because `hold-trigger-on-release` is disabled for the index fingers.\n    // Otherwise, you may be surprised that the index fingers' modifier is\n    // sent immediately without the rest of your multi-mod chord when you\n    // perform outward rolls from your index fingers toward your pinkies.\n    //\n    #define SHIFT_HOLDING_TIME 170\n\n    //\n    // SHIFT_STREAK_DECAY defines how long you need to wait (milliseconds)\n    // after typing before you can use home row mods again.  It prevents\n    // unintended activation of home row mods when you're actively typing.\n    //\n    #define SHIFT_STREAK_DECAY 70 // global-quick-tap-ms\n\n    //\n    // THUMB_HOLDING_TYPE defines the flavor of ZMK hold-tap behavior to use\n    // for the thumbs (which are assigned to 6 layers in the Miryoku system).\n    //\n    // NOTE: The \"balanced\" flavor of ZMK hold-tap provides instant modifier\n    // activation for the symbol layer (if the tapped symbol key is released\n    // while the thumb layer key is still held down) for quicker programming.\n    //\n    #define THUMB_HOLDING_TYPE \"balanced\"\n\n    //\n    // THUMB_HOLDING_TIME defines how long you need to hold (milliseconds)\n    // a thumb key to activate a layer.  Shorter holds are treated as taps.\n    //\n    #define THUMB_HOLDING_TIME 200\n\n    //\n    // THUMB_REPEAT_DECAY defines how much time you have left (milliseconds)\n    // after tapping a key to hold it again in order to make it auto-repeat.\n    //\n    #define THUMB_REPEAT_DECAY 300 // \"tap then hold\" for key auto-repeat\n\n    //\n    // SPACE_HOLDING_TIME defines how long you need to hold (milliseconds)\n    // the space thumb key to activate.  Shorter holds are treated as taps.\n    //\n    #define SPACE_HOLDING_TIME 170\n\n    //\n    // SPACE_REPEAT_DECAY defines how much time you have left (milliseconds)\n    // after tapping a key to hold it again in order to make it auto-repeat.\n    //\n    #define SPACE_REPEAT_DECAY 200 // \"tap then hold\" for key auto-repeat\n\n    //\n    // Glove80 key positions index for positional hold-tap\n    // - https://discord.com/channels/877392805654306816/937645688244826154/1066713913351221248\n    // - https://media.discordapp.net/attachments/937645688244826154/1066713913133121556/image.png\n    //\n    // |------------------------|------------------------|\n    // | LEFT_HAND_KEYS         |        RIGHT_HAND_KEYS |\n    // |                        |                        |\n    // |  0  1  2  3  4         |          5  6  7  8  9 |\n    // | 10 11 12 13 14 15      |      16 17 18 19 20 21 |\n    // | 22 23 24 25 26 27      |      28 29 30 31 32 33 |\n    // | 34 35 36 37 38 39      |      40 41 42 43 44 45 |\n    // | 46 47 48 49 50 51      |      58 59 60 61 62 63 |\n    // | 64 65 66 67 68         |         75 76 77 78 79 |\n    // |                69 52   |   57 74                |\n    // |                 70 53  |  56 73                 |\n    // |                  71 54 | 55 72                  |\n    // |------------------------|------------------------|\n    //\n    #define LEFT_HAND_KEYS      \\\n          0  1  2  3  4         \\\n         10 11 12 13 14 15      \\\n         22 23 24 25 26 27      \\\n         34 35 36 37 38 39      \\\n         46 47 48 49 50 51      \\\n         64 65 66 67 68\n    #define RIGHT_HAND_KEYS     \\\n                                           5  6  7  8  9 \\\n                                       16 17 18 19 20 21 \\\n                                       28 29 30 31 32 33 \\\n                                       40 41 42 43 44 45 \\\n                                       58 59 60 61 62 63 \\\n                                          75 76 77 78 79\n    #define THUMB_KEYS          \\\n                        69 52       57 74                \\\n                         70 53     56 73                 \\\n                          71 54   55 72\n\n    //\n    // Home row mod-tap keys for all except index fingers\n    //\n    homey_left: miryoku_home_row_mods_left_hand {\n        compatible = \"zmk,behavior-hold-tap\";\n        label = \"HOME_ROW_MODS_LEFT_HAND\";\n        flavor = HOMEY_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <HOMEY_HOLDING_TIME>;\n        quick-tap-ms = <HOMEY_STREAK_DECAY>;\n        global-quick-tap; // with typing streak\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    homey_right: miryoku_home_row_mods_right_hand {\n        compatible = \"zmk,behavior-hold-tap\";\n        label = \"HOME_ROW_MODS_RIGHT_HAND\";\n        flavor = HOMEY_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <HOMEY_HOLDING_TIME>;\n        quick-tap-ms = <HOMEY_STREAK_DECAY>;\n        global-quick-tap; // with typing streak\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n\n    //\n    // Special home row mod-tap keys for the index fingers\n    //\n    shift_left: miryoku_home_row_mods_left_shift_shift {\n        compatible = \"zmk,behavior-hold-tap\";\n        label = \"HOME_ROW_MODS_LEFT_SHIFT_SHIFT\";\n        flavor = SHIFT_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        //hold-trigger-on-release; // don't wait for other mods\n        tapping-term-ms = <SHIFT_HOLDING_TIME>;\n        quick-tap-ms = <SHIFT_STREAK_DECAY>;\n        global-quick-tap; // with typing streak\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n    shift_right: miryoku_home_row_mods_right_shift_shift {\n        compatible = \"zmk,behavior-hold-tap\";\n        label = \"HOME_ROW_MODS_RIGHT_SHIFT_SHIFT\";\n        flavor = SHIFT_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        //hold-trigger-on-release; // don't wait for other mods\n        tapping-term-ms = <SHIFT_HOLDING_TIME>;\n        quick-tap-ms = <SHIFT_STREAK_DECAY>;\n        global-quick-tap; // with typing streak\n        #binding-cells = <2>;\n        bindings = <&kp>, <&kp>;\n    };\n\n    //\n    // Thumb cluster hold-tap keys for Miryoku layers\n    //\n    thumb: miryoku_thumb_layer {\n        compatible = \"zmk,behavior-hold-tap\";\n        label = \"MIRYOKU_THUMB_LAYER\";\n        flavor = THUMB_HOLDING_TYPE;\n        tapping-term-ms = <THUMB_HOLDING_TIME>;\n        quick-tap-ms = <THUMB_REPEAT_DECAY>; // enable repeat\n        //global-quick-tap; // no typing streak\n        //retro-tap; // don't allow slow (hold-like) taps\n        #binding-cells = <2>;\n        bindings = <&mo>, <&kp>;\n    };\n    space: miryoku_thumb_layer_spacebar {\n        compatible = \"zmk,behavior-hold-tap\";\n        label = \"MIRYOKU_THUMB_LAYER_SPACEBAR\";\n        flavor = THUMB_HOLDING_TYPE;\n        tapping-term-ms = <SPACE_HOLDING_TIME>;\n        quick-tap-ms = <SPACE_REPEAT_DECAY>; // enable repeat\n        //global-quick-tap; // no typing streak\n        retro-tap; // allow slow (hold-like) taps\n        #binding-cells = <2>;\n        bindings = <&mo>, <&kp>;\n    };\n\n    //////////////////////////////////////////////////////////////////\n    //\n    // Custom shifted pairs\n    //\n    //////////////////////////////////////////////////////////////////\n\n    //\n    // Shift + CapsWord = CapsLock\n    //\n    cappy: capsword_and_capslock {\n        compatible = \"zmk,behavior-mod-morph\";\n        label = \"CAPSWORD_AND_CAPSLOCK\";\n        #binding-cells = <0>;\n        bindings = <&caps_word>, <&kp CAPSLOCK>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n\n    //\n    // Custom shifted pairs for the Engram layout\n    // - https://engram.dev/\n    // - https://sunaku.github.io/engram-keyboard-layout.html\n    //\n    engram_1: engram_one_and_pipe {\n        compatible = \"zmk,behavior-mod-morph\";\n        label = \"ENGRAM_ONE_AND_PIPE\";\n        #binding-cells = <0>;\n        bindings = <&kp N1>, <&kp PIPE>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_2: engram_two_and_equal {\n        compatible = \"zmk,behavior-mod-morph\";\n        label = \"ENGRAM_TWO_AND_EQUAL\";\n        #binding-cells = <0>;\n        bindings = <&kp N2>, <&kp EQUAL>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_3: engram_three_and_tilde {\n        compatible = \"zmk,behavior-mod-morph\";\n        label = \"ENGRAM_THREE_AND_TILDE\";\n        #binding-cells = <0>;\n        bindings = <&kp N3>, <&kp TILDE>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_4: engram_four_and_plus {\n        compatible = \"zmk,behavior-mod-morph\";\n        label = \"ENGRAM_FOUR_AND_PLUS\";\n        #binding-cells = <0>;\n        bindings = <&kp N4>, <&kp PLUS>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_5: engram_five_and_less_than {\n        compatible = \"zmk,behavior-mod-morph\";\n        label = \"ENGRAM_FIVE_AND_LESS_THAN\";\n        #binding-cells = <0>;\n        bindings = <&kp N5>, <&kp LESS_THAN>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_6: engram_six_and_greater_than {\n        compatible = \"zmk,behavior-mod-morph\";\n        label = \"ENGRAM_SIX_AND_GREATER_THAN\";\n        #binding-cells = <0>;\n        bindings = <&kp N6>, <&kp GREATER_THAN>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_7: engram_seven_and_caret {\n        compatible = \"zmk,behavior-mod-morph\";\n        label = \"ENGRAM_SEVEN_AND_CARET\";\n        #binding-cells = <0>;\n        bindings = <&kp N7>, <&kp CARET>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_8: engram_eight_and_ampersand {\n        compatible = \"zmk,behavior-mod-morph\";\n        label = \"ENGRAM_EIGHT_AND_AMPERSAND\";\n        #binding-cells = <0>;\n        bindings = <&kp N8>, <&kp AMPERSAND>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_9: engram_nine_and_percent {\n        compatible = \"zmk,behavior-mod-morph\";\n        label = \"ENGRAM_NINE_AND_PERCENT\";\n        #binding-cells = <0>;\n        bindings = <&kp N9>, <&kp PERCENT>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_0: engram_zero_and_asterisk {\n        compatible = \"zmk,behavior-mod-morph\";\n        label = \"ENGRAM_ZERO_AND_ASTERISK\";\n        #binding-cells = <0>;\n        bindings = <&kp N0>, <&kp ASTERISK>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_apos: engram_apostrophe_and_left_parenthesis {\n        compatible = \"zmk,behavior-mod-morph\";\n        label = \"ENGRAM_APOSTROPHE_AND_LEFT_PARENTHESIS\";\n        #binding-cells = <0>;\n        bindings = <&kp APOSTROPHE>, <&kp LEFT_PARENTHESIS>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_dquote: engram_double_quotes_and_right_parenthesis {\n        compatible = \"zmk,behavior-mod-morph\";\n        label = \"ENGRAM_DOUBLE_QUOTES_AND_RIGHT_PARENTHESIS\";\n        #binding-cells = <0>;\n        bindings = <&kp DOUBLE_QUOTES>, <&kp RIGHT_PARENTHESIS>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_comma: engram_comma_and_semicolon {\n        compatible = \"zmk,behavior-mod-morph\";\n        label = \"ENGRAM_COMMA_AND_SEMICOLON\";\n        #binding-cells = <0>;\n        bindings = <&kp COMMA>, <&kp SEMICOLON>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_period: engram_period_and_colon {\n        compatible = \"zmk,behavior-mod-morph\";\n        label = \"ENGRAM_PERIOD_AND_COLON\";\n        #binding-cells = <0>;\n        bindings = <&kp PERIOD>, <&kp COLON>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_question: engram_question_and_exclamation {\n        compatible = \"zmk,behavior-mod-morph\";\n        label = \"ENGRAM_QUESTION_AND_EXCLAMATION\";\n        #binding-cells = <0>;\n        bindings = <&kp QUESTION>, <&kp EXCLAMATION>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_hash: engram_hash_and_dollar {\n        compatible = \"zmk,behavior-mod-morph\";\n        label = \"ENGRAM_HASH_AND_DOLLAR\";\n        #binding-cells = <0>;\n        bindings = <&kp HASH>, <&kp DOLLAR>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_at: engram_at_and_grave {\n        compatible = \"zmk,behavior-mod-morph\";\n        label = \"ENGRAM_AT_AND_GRAVE\";\n        #binding-cells = <0>;\n        bindings = <&kp AT>, <&kp GRAVE>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_slash: engram_slash_and_backslash {\n        compatible = \"zmk,behavior-mod-morph\";\n        label = \"ENGRAM_SLASH_AND_BACKSLASH\";\n        #binding-cells = <0>;\n        bindings = <&kp SLASH>, <&kp BACKSLASH>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n\n    //////////////////////////////////////////////////////////////////\n    //\n    // ZMK global overrides\n    //\n    //////////////////////////////////////////////////////////////////\n\n    //\n    // CapsWord - ported from Pascal Getreuer's extension for QMK\n    // - https://zmk.dev/docs/behaviors/caps-word\n    // - https://getreuer.info/posts/keyboards/caps-word/index.html\n    //\n    behavior_caps_word {\n        continue-list = <\n            UNDERSCORE MINUS\n            BACKSPACE DELETE\n            N1 N2 N3 N4 N5 N6 N7 N8 N9 N0\n        >;\n    };\n\n};\n\nmacros {\n\n    //////////////////////////////////////////////////////////////////\n    //\n    // Approximation of Pascal Getreuer's Select Word macro from QMK\n    // - https://getreuer.info/posts/keyboards/select-word/index.html\n    //\n    //////////////////////////////////////////////////////////////////\n\n    //\n    // SELECT_WORD_DELAY defines how long the macro waits (milliseconds)\n    // after moving the cursor before it selects a word.  A larger delay\n    // may allow the macro to move to the next word upon each invocation.\n    //\n    #define SELECT_WORD_DELAY 1\n\n    //\n    // select a word (jumps to next word upon each successive invocation)\n    //\n    select_word: select_word {\n        compatible = \"zmk,behavior-mod-morph\";\n        label = \"SELECT_WORD\";\n        #binding-cells = <0>;\n        bindings = <&select_word_right>, <&select_word_left>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    ZMK_MACRO(select_word_right,\n        wait-ms = <SELECT_WORD_DELAY>;\n        tap-ms = <SELECT_WORD_DELAY>;\n        bindings = <&kp LC(RIGHT) &kp LC(LEFT) &kp LC(LS(RIGHT))>;\n    )\n    ZMK_MACRO(select_word_left,\n        wait-ms = <SELECT_WORD_DELAY>;\n        tap-ms = <SELECT_WORD_DELAY>;\n        bindings = <&kp LC(LEFT) &kp LC(RIGHT) &kp LC(LS(LEFT))>;\n    )\n\n    //\n    // extend current selection by one word\n    //\n    extend_word: extend_word {\n        compatible = \"zmk,behavior-mod-morph\";\n        label = \"EXTEND_WORD\";\n        #binding-cells = <0>;\n        bindings = <&extend_word_right>, <&extend_word_left>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    ZMK_MACRO(extend_word_right,\n        wait-ms = <SELECT_WORD_DELAY>;\n        tap-ms = <SELECT_WORD_DELAY>;\n        bindings = <&kp LC(LS(RIGHT))>;\n    )\n    ZMK_MACRO(extend_word_left,\n        wait-ms = <SELECT_WORD_DELAY>;\n        tap-ms = <SELECT_WORD_DELAY>;\n        bindings = <&kp LC(LS(LEFT))>;\n    )\n\n    //\n    // select current line\n    //\n    select_line: select_line {\n        compatible = \"zmk,behavior-mod-morph\";\n        label = \"SELECT_LINE\";\n        #binding-cells = <0>;\n        bindings = <&select_line_right>, <&select_line_left>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    ZMK_MACRO(select_line_right,\n        wait-ms = <SELECT_WORD_DELAY>;\n        tap-ms = <SELECT_WORD_DELAY>;\n        bindings = <&kp HOME &kp LS(END)>;\n    )\n    ZMK_MACRO(select_line_left,\n        wait-ms = <SELECT_WORD_DELAY>;\n        tap-ms = <SELECT_WORD_DELAY>;\n        bindings = <&kp END &kp LS(HOME)>;\n    )\n\n    //\n    // extend current selection by one line\n    //\n    extend_line: extend_line {\n        compatible = \"zmk,behavior-mod-morph\";\n        label = \"EXTEND_LINE\";\n        #binding-cells = <0>;\n        bindings = <&extend_line_right>, <&extend_line_left>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    ZMK_MACRO(extend_line_right,\n        wait-ms = <SELECT_WORD_DELAY>;\n        tap-ms = <SELECT_WORD_DELAY>;\n        bindings = <&kp LS(DOWN) &kp LS(END)>;\n    )\n    ZMK_MACRO(extend_line_left,\n        wait-ms = <SELECT_WORD_DELAY>;\n        tap-ms = <SELECT_WORD_DELAY>;\n        bindings = <&kp LS(UP) &kp LS(HOME)>;\n    )\n\n    //////////////////////////////////////////////////////////////////////////\n    //\n    // World layer - international characters\n    //\n    //////////////////////////////////////////////////////////////////////////\n\n    //\n    // UNICODE_TAP_DELAY defines how long the macro waits (milliseconds)\n    // between keystrokes while inputting the Unicode codepoint shortcut.\n    //\n    #define UNICODE_TAP_DELAY 1\n\n    //\n    // UNICODE_SEQ_DELAY defines how long the macro waits (milliseconds)\n    // between emitting Unicode codepoints in multi-codepoint characters.\n    //\n    #define UNICODE_SEQ_DELAY 10\n\n    //\n    // UNICODE_TRANSLATE() defines how a textual codepoint will be converted\n    // into an actual Unicode codepoint.  This is Operating System dependent.\n    //\n    #define UNICODE_TRANSLATE(codepoint) \\\n        UNICODE_TRANSLATE_LINUX(codepoint) // you can change this to WINDOWS\n\n    #define UNICODE_TRANSLATE_LINUX(codepoint) \\\n                <&kp LC(LS(U))> \\\n                , codepoint \\\n                , <&kp ENTER>\n\n    #define UNICODE_TRANSLATE_WINDOWS(codepoint) \\\n                codepoint \\\n                , <&kp LA(X)>\n\n    #define UNICODE_SEQUENCE(name, ...) \\\n        ZMK_MACRO(name, \\\n            wait-ms = <UNICODE_TAP_DELAY>; \\\n            tap-ms = <UNICODE_TAP_DELAY>; \\\n            bindings = __VA_ARGS__; \\\n        )\n\n    #define UNICODE(name, codepoint) \\\n        UNICODE_SEQUENCE(name, UNICODE_TRANSLATE(codepoint))\n\n    UNICODE(world_degree_sign,       <&kp N0 &kp N0 &kp B  &kp N0 >) // °\n    UNICODE(world_section_sign,      <&kp N0 &kp N0 &kp A  &kp N7 >) // §\n    UNICODE(world_paragraph_sign,    <&kp N0 &kp N0 &kp B  &kp N6 >) // ¶\n    UNICODE(world_o_ordinal,         <&kp N0 &kp N0 &kp B  &kp A  >) // º\n    UNICODE(world_a_ordinal,         <&kp N0 &kp N0 &kp A  &kp A  >) // ª\n    UNICODE(world_exclaim_left,      <&kp N0 &kp N0 &kp A  &kp N1 >) // ¡\n    UNICODE(world_question_left,     <&kp N0 &kp N0 &kp B  &kp F  >) // ¿\n    UNICODE(world_quote_left,        <&kp N0 &kp N0 &kp A  &kp B  >) // «\n    UNICODE(world_quote_right,       <&kp N0 &kp N0 &kp B  &kp B  >) // »\n\n      // characters //////////////////////////////////////////////////////////\n\n          /* ç */ UNICODE(world_c_cedilla_lower, <&kp N0 &kp N0 &kp E &kp N7>)\n\n          /* Ç */ UNICODE(world_c_cedilla_upper, <&kp N0 &kp N0 &kp C &kp N7>)\n\n        world_c_cedilla: world_c_cedilla {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_C_CEDILLA\";\n            #binding-cells = <0>;\n            bindings = <&world_c_cedilla_lower>, <&world_c_cedilla_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n          /* í */ UNICODE(world_i_acute_lower, <&kp N0 &kp N0 &kp E &kp D>)\n\n          /* Í */ UNICODE(world_i_acute_upper, <&kp N0 &kp N0 &kp C &kp D>)\n\n        world_i_acute: world_i_acute {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_I_ACUTE\";\n            #binding-cells = <0>;\n            bindings = <&world_i_acute_lower>, <&world_i_acute_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n          /* ï */ UNICODE(world_i_diaeresis_lower, <&kp N0 &kp N0 &kp E &kp F>)\n\n          /* Ï */ UNICODE(world_i_diaeresis_upper, <&kp N0 &kp N0 &kp C &kp F>)\n\n        world_i_diaeresis: world_i_diaeresis {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_I_DIAERESIS\";\n            #binding-cells = <0>;\n            bindings = <&world_i_diaeresis_lower>, <&world_i_diaeresis_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n          /* î */ UNICODE(world_i_circumflex_lower, <&kp N0 &kp N0 &kp E &kp E>)\n\n          /* Î */ UNICODE(world_i_circumflex_upper, <&kp N0 &kp N0 &kp C &kp E>)\n\n        world_i_circumflex: world_i_circumflex {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_I_CIRCUMFLEX\";\n            #binding-cells = <0>;\n            bindings = <&world_i_circumflex_lower>, <&world_i_circumflex_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n          /* ì */ UNICODE(world_i_grave_lower, <&kp N0 &kp N0 &kp E &kp C>)\n\n          /* Ì */ UNICODE(world_i_grave_upper, <&kp N0 &kp N0 &kp C &kp C>)\n\n        world_i_grave: world_i_grave {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_I_GRAVE\";\n            #binding-cells = <0>;\n            bindings = <&world_i_grave_lower>, <&world_i_grave_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n          /* é */ UNICODE(world_e_acute_lower, <&kp N0 &kp N0 &kp E &kp N9>)\n\n          /* É */ UNICODE(world_e_acute_upper, <&kp N0 &kp N0 &kp C &kp N9>)\n\n        world_e_acute: world_e_acute {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_E_ACUTE\";\n            #binding-cells = <0>;\n            bindings = <&world_e_acute_lower>, <&world_e_acute_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n          /* ë */ UNICODE(world_e_diaeresis_lower, <&kp N0 &kp N0 &kp E &kp B>)\n\n          /* Ë */ UNICODE(world_e_diaeresis_upper, <&kp N0 &kp N0 &kp C &kp B>)\n\n        world_e_diaeresis: world_e_diaeresis {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_E_DIAERESIS\";\n            #binding-cells = <0>;\n            bindings = <&world_e_diaeresis_lower>, <&world_e_diaeresis_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n          /* ê */ UNICODE(world_e_circumflex_lower, <&kp N0 &kp N0 &kp E &kp A>)\n\n          /* Ê */ UNICODE(world_e_circumflex_upper, <&kp N0 &kp N0 &kp C &kp A>)\n\n        world_e_circumflex: world_e_circumflex {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_E_CIRCUMFLEX\";\n            #binding-cells = <0>;\n            bindings = <&world_e_circumflex_lower>, <&world_e_circumflex_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n          /* è */ UNICODE(world_e_grave_lower, <&kp N0 &kp N0 &kp E &kp N8>)\n\n          /* È */ UNICODE(world_e_grave_upper, <&kp N0 &kp N0 &kp C &kp N8>)\n\n        world_e_grave: world_e_grave {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_E_GRAVE\";\n            #binding-cells = <0>;\n            bindings = <&world_e_grave_lower>, <&world_e_grave_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n          /* æ */ UNICODE(world_e_ae_lower, <&kp N0 &kp N0 &kp E &kp N6>)\n\n          /* Æ */ UNICODE(world_e_ae_upper, <&kp N0 &kp N0 &kp C &kp N6>)\n\n        world_e_ae: world_e_ae {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_E_AE\";\n            #binding-cells = <0>;\n            bindings = <&world_e_ae_lower>, <&world_e_ae_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n          /* á */ UNICODE(world_a_acute_lower, <&kp N0 &kp N0 &kp E &kp N1>)\n\n          /* Á */ UNICODE(world_a_acute_upper, <&kp N0 &kp N0 &kp C &kp N1>)\n\n        world_a_acute: world_a_acute {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_A_ACUTE\";\n            #binding-cells = <0>;\n            bindings = <&world_a_acute_lower>, <&world_a_acute_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n          /* ä */ UNICODE(world_a_diaeresis_lower, <&kp N0 &kp N0 &kp E &kp N4>)\n\n          /* Ä */ UNICODE(world_a_diaeresis_upper, <&kp N0 &kp N0 &kp C &kp N4>)\n\n        world_a_diaeresis: world_a_diaeresis {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_A_DIAERESIS\";\n            #binding-cells = <0>;\n            bindings = <&world_a_diaeresis_lower>, <&world_a_diaeresis_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n          /* â */ UNICODE(world_a_circumflex_lower, <&kp N0 &kp N0 &kp E &kp N2>)\n\n          /* Â */ UNICODE(world_a_circumflex_upper, <&kp N0 &kp N0 &kp C &kp N2>)\n\n        world_a_circumflex: world_a_circumflex {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_A_CIRCUMFLEX\";\n            #binding-cells = <0>;\n            bindings = <&world_a_circumflex_lower>, <&world_a_circumflex_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n          /* à */ UNICODE(world_a_grave_lower, <&kp N0 &kp N0 &kp E &kp N0>)\n\n          /* À */ UNICODE(world_a_grave_upper, <&kp N0 &kp N0 &kp C &kp N0>)\n\n        world_a_grave: world_a_grave {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_A_GRAVE\";\n            #binding-cells = <0>;\n            bindings = <&world_a_grave_lower>, <&world_a_grave_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n          /* ã */ UNICODE(world_a_tilde_lower, <&kp N0 &kp N0 &kp E &kp N3>)\n\n          /* Ã */ UNICODE(world_a_tilde_upper, <&kp N0 &kp N0 &kp C &kp N3>)\n\n        world_a_tilde: world_a_tilde {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_A_TILDE\";\n            #binding-cells = <0>;\n            bindings = <&world_a_tilde_lower>, <&world_a_tilde_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n          /* å */ UNICODE(world_a_ring_lower, <&kp N0 &kp N0 &kp E &kp N5>)\n\n          /* Å */ UNICODE(world_a_ring_upper, <&kp N0 &kp N0 &kp C &kp N5>)\n\n        world_a_ring: world_a_ring {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_A_RING\";\n            #binding-cells = <0>;\n            bindings = <&world_a_ring_lower>, <&world_a_ring_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n          /* ý */ UNICODE(world_y_acute_lower, <&kp N0 &kp N0 &kp F &kp D>)\n\n          /* Ý */ UNICODE(world_y_acute_upper, <&kp N0 &kp N0 &kp D &kp D>)\n\n        world_y_acute: world_y_acute {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_Y_ACUTE\";\n            #binding-cells = <0>;\n            bindings = <&world_y_acute_lower>, <&world_y_acute_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n          /* ÿ */ UNICODE(world_y_diaeresis_lower, <&kp N0 &kp N0 &kp F &kp F>)\n\n          /* Ÿ */ UNICODE(world_y_diaeresis_upper, <&kp N0 &kp N1 &kp N7 &kp N8>)\n\n        world_y_diaeresis: world_y_diaeresis {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_Y_DIAERESIS\";\n            #binding-cells = <0>;\n            bindings = <&world_y_diaeresis_lower>, <&world_y_diaeresis_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n          /* ó */ UNICODE(world_o_acute_lower, <&kp N0 &kp N0 &kp F &kp N3>)\n\n          /* Ó */ UNICODE(world_o_acute_upper, <&kp N0 &kp N0 &kp D &kp N3>)\n\n        world_o_acute: world_o_acute {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_O_ACUTE\";\n            #binding-cells = <0>;\n            bindings = <&world_o_acute_lower>, <&world_o_acute_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n          /* ö */ UNICODE(world_o_diaeresis_lower, <&kp N0 &kp N0 &kp F &kp N6>)\n\n          /* Ö */ UNICODE(world_o_diaeresis_upper, <&kp N0 &kp N0 &kp D &kp N6>)\n\n        world_o_diaeresis: world_o_diaeresis {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_O_DIAERESIS\";\n            #binding-cells = <0>;\n            bindings = <&world_o_diaeresis_lower>, <&world_o_diaeresis_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n          /* ô */ UNICODE(world_o_circumflex_lower, <&kp N0 &kp N0 &kp F &kp N4>)\n\n          /* Ô */ UNICODE(world_o_circumflex_upper, <&kp N0 &kp N0 &kp D &kp N4>)\n\n        world_o_circumflex: world_o_circumflex {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_O_CIRCUMFLEX\";\n            #binding-cells = <0>;\n            bindings = <&world_o_circumflex_lower>, <&world_o_circumflex_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n          /* ò */ UNICODE(world_o_grave_lower, <&kp N0 &kp N0 &kp F &kp N2>)\n\n          /* Ò */ UNICODE(world_o_grave_upper, <&kp N0 &kp N0 &kp D &kp N2>)\n\n        world_o_grave: world_o_grave {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_O_GRAVE\";\n            #binding-cells = <0>;\n            bindings = <&world_o_grave_lower>, <&world_o_grave_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n          /* õ */ UNICODE(world_o_tilde_lower, <&kp N0 &kp N0 &kp F &kp N5>)\n\n          /* Õ */ UNICODE(world_o_tilde_upper, <&kp N0 &kp N0 &kp D &kp N5>)\n\n        world_o_tilde: world_o_tilde {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_O_TILDE\";\n            #binding-cells = <0>;\n            bindings = <&world_o_tilde_lower>, <&world_o_tilde_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n          /* ø */ UNICODE(world_o_slash_lower, <&kp N0 &kp N0 &kp F &kp N8>)\n\n          /* Ø */ UNICODE(world_o_slash_upper, <&kp N0 &kp N0 &kp D &kp N8>)\n\n        world_o_slash: world_o_slash {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_O_SLASH\";\n            #binding-cells = <0>;\n            bindings = <&world_o_slash_lower>, <&world_o_slash_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n          /* ú */ UNICODE(world_u_acute_lower, <&kp N0 &kp N0 &kp F &kp A>)\n\n          /* Ú */ UNICODE(world_u_acute_upper, <&kp N0 &kp N0 &kp D &kp A>)\n\n        world_u_acute: world_u_acute {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_U_ACUTE\";\n            #binding-cells = <0>;\n            bindings = <&world_u_acute_lower>, <&world_u_acute_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n          /* ü */ UNICODE(world_u_diaeresis_lower, <&kp N0 &kp N0 &kp F &kp C>)\n\n          /* Ü */ UNICODE(world_u_diaeresis_upper, <&kp N0 &kp N0 &kp D &kp C>)\n\n        world_u_diaeresis: world_u_diaeresis {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_U_DIAERESIS\";\n            #binding-cells = <0>;\n            bindings = <&world_u_diaeresis_lower>, <&world_u_diaeresis_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n          /* û */ UNICODE(world_u_circumflex_lower, <&kp N0 &kp N0 &kp F &kp B>)\n\n          /* Û */ UNICODE(world_u_circumflex_upper, <&kp N0 &kp N0 &kp D &kp B>)\n\n        world_u_circumflex: world_u_circumflex {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_U_CIRCUMFLEX\";\n            #binding-cells = <0>;\n            bindings = <&world_u_circumflex_lower>, <&world_u_circumflex_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n          /* ù */ UNICODE(world_u_grave_lower, <&kp N0 &kp N0 &kp F &kp N9>)\n\n          /* Ù */ UNICODE(world_u_grave_upper, <&kp N0 &kp N0 &kp D &kp N9>)\n\n        world_u_grave: world_u_grave {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_U_GRAVE\";\n            #binding-cells = <0>;\n            bindings = <&world_u_grave_lower>, <&world_u_grave_upper>;\n            mods = <MOD_LSFT>;\n        };\n\n      // transforms //////////////////////////////////////////////////////////\n\n        world_i_base: world_i_base {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_I_BASE\";\n            #binding-cells = <0>;\n            bindings = <&world_i_acute>, <&world_i_LCTL>;\n            mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n        };\n\n        world_i_LCTL: world_i_LCTL {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_I_LCTL\";\n            #binding-cells = <0>;\n            bindings = <&world_i_diaeresis>, <&world_i_RCTL>;\n            mods = <(MOD_RCTL|MOD_RSFT)>;\n        };\n\n        world_i_RCTL: world_i_RCTL {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_I_RCTL\";\n            #binding-cells = <0>;\n            bindings = <&world_i_circumflex>, <&world_i_grave>;\n            mods = <(MOD_RSFT)>;\n        };\n\n        world_e_base: world_e_base {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_E_BASE\";\n            #binding-cells = <0>;\n            bindings = <&world_e_acute>, <&world_e_RALT>;\n            mods = <(MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n        };\n\n        world_e_RALT: world_e_RALT {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_E_RALT\";\n            #binding-cells = <0>;\n            bindings = <&world_e_ae>, <&world_e_LCTL>;\n            mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n        };\n\n        world_e_LCTL: world_e_LCTL {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_E_LCTL\";\n            #binding-cells = <0>;\n            bindings = <&world_e_diaeresis>, <&world_e_RCTL>;\n            mods = <(MOD_RCTL|MOD_RSFT)>;\n        };\n\n        world_e_RCTL: world_e_RCTL {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_E_RCTL\";\n            #binding-cells = <0>;\n            bindings = <&world_e_circumflex>, <&world_e_grave>;\n            mods = <(MOD_RSFT)>;\n        };\n\n        world_a_base: world_a_base {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_A_BASE\";\n            #binding-cells = <0>;\n            bindings = <&world_a_acute>, <&world_a_LALT>;\n            mods = <(MOD_LALT|MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n        };\n\n        world_a_LALT: world_a_LALT {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_A_LALT\";\n            #binding-cells = <0>;\n            bindings = <&world_a_tilde>, <&world_a_RALT>;\n            mods = <(MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n        };\n\n        world_a_RALT: world_a_RALT {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_A_RALT\";\n            #binding-cells = <0>;\n            bindings = <&world_a_ring>, <&world_a_LCTL>;\n            mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n        };\n\n        world_a_LCTL: world_a_LCTL {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_A_LCTL\";\n            #binding-cells = <0>;\n            bindings = <&world_a_diaeresis>, <&world_a_RCTL>;\n            mods = <(MOD_RCTL|MOD_RSFT)>;\n        };\n\n        world_a_RCTL: world_a_RCTL {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_A_RCTL\";\n            #binding-cells = <0>;\n            bindings = <&world_a_circumflex>, <&world_a_grave>;\n            mods = <(MOD_RSFT)>;\n        };\n\n        world_y_base: world_y_base {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_Y_BASE\";\n            #binding-cells = <0>;\n            bindings = <&world_y_acute>, <&world_y_diaeresis>;\n            mods = <(MOD_LCTL)>;\n        };\n\n        world_o_base: world_o_base {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_O_BASE\";\n            #binding-cells = <0>;\n            bindings = <&world_o_acute>, <&world_o_LALT>;\n            mods = <(MOD_LALT|MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n        };\n\n        world_o_LALT: world_o_LALT {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_O_LALT\";\n            #binding-cells = <0>;\n            bindings = <&world_o_tilde>, <&world_o_RALT>;\n            mods = <(MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n        };\n\n        world_o_RALT: world_o_RALT {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_O_RALT\";\n            #binding-cells = <0>;\n            bindings = <&world_o_slash>, <&world_o_LCTL>;\n            mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n        };\n\n        world_o_LCTL: world_o_LCTL {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_O_LCTL\";\n            #binding-cells = <0>;\n            bindings = <&world_o_diaeresis>, <&world_o_RCTL>;\n            mods = <(MOD_RCTL|MOD_RSFT)>;\n        };\n\n        world_o_RCTL: world_o_RCTL {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_O_RCTL\";\n            #binding-cells = <0>;\n            bindings = <&world_o_circumflex>, <&world_o_grave>;\n            mods = <(MOD_RSFT)>;\n        };\n\n        world_u_base: world_u_base {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_U_BASE\";\n            #binding-cells = <0>;\n            bindings = <&world_u_acute>, <&world_u_LCTL>;\n            mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n        };\n\n        world_u_LCTL: world_u_LCTL {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_U_LCTL\";\n            #binding-cells = <0>;\n            bindings = <&world_u_diaeresis>, <&world_u_RCTL>;\n            mods = <(MOD_RCTL|MOD_RSFT)>;\n        };\n\n        world_u_RCTL: world_u_RCTL {\n            compatible = \"zmk,behavior-mod-morph\";\n            label = \"WORLD_U_RCTL\";\n            #binding-cells = <0>;\n            bindings = <&world_u_circumflex>, <&world_u_grave>;\n            mods = <(MOD_RSFT)>;\n        };\n\n    //////////////////////////////////////////////////////////////////////////\n    //\n    // Emoji layer - modern age pictograms\n    //\n    //////////////////////////////////////////////////////////////////////////\n\n          /* 🌑 */ UNICODE(emoji_new_moon, <&kp N1 &kp F &kp N3 &kp N1 &kp N1>)\n\n          /* 🌒 */ UNICODE(emoji_waxing_crescent_moon, <&kp N1 &kp F &kp N3 &kp N1 &kp N2>)\n\n          /* 🌓 */ UNICODE(emoji_first_quarter_moon, <&kp N1 &kp F &kp N3 &kp N1 &kp N3>)\n\n          /* 🌔 */ UNICODE(emoji_waxing_gibbous_moon, <&kp N1 &kp F &kp N3 &kp N1 &kp N4>)\n\n          /* 🌕 */ UNICODE(emoji_full_moon, <&kp N1 &kp F &kp N3 &kp N1 &kp N5>)\n\n          /* 🎉 */ UNICODE(emoji_tada, <&kp N1 &kp F &kp N3 &kp N8 &kp N9>)\n\n          /* ️❤️ */ UNICODE_SEQUENCE(emoji_heart, <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_TRANSLATE(<&kp F &kp E &kp N0 &kp F>), UNICODE_TRANSLATE(<&kp N2 &kp N7 &kp N6 &kp N4>), UNICODE_TRANSLATE(<&kp F &kp E &kp N0 &kp F>))\n\n          /* 🔥 */ UNICODE(emoji_fire, <&kp N1 &kp F &kp N5 &kp N2 &kp N5>)\n\n          /* 💪 */ UNICODE(emoji_muscle, <&kp N1 &kp F &kp N4 &kp A &kp A>)\n\n          /* 🧗 */ UNICODE(emoji_person_climbing, <&kp N1 &kp F &kp N9 &kp D &kp N7>)\n\n          /* 🚀 */ UNICODE(emoji_rocket, <&kp N1 &kp F &kp N6 &kp N8 &kp N0>)\n\n          /* 😎 */ UNICODE(emoji_sunglasses, <&kp N1 &kp F &kp N6 &kp N0 &kp E>)\n\n          /* 😍 */ UNICODE(emoji_heart_eyes, <&kp N1 &kp F &kp N6 &kp N0 &kp D>)\n\n          /* 🤩 */ UNICODE(emoji_star_struck, <&kp N1 &kp F &kp N9 &kp N2 &kp N9>)\n\n          /* 🥲 */ UNICODE(emoji_tear_smile, <&kp N1 &kp F &kp N9 &kp N7 &kp N2>)\n\n          /* 😱 */ UNICODE(emoji_scream, <&kp N1 &kp F &kp N6 &kp N3 &kp N1>)\n\n          /* 🧑‍🚀 */ UNICODE_SEQUENCE(emoji_astronaut, <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_TRANSLATE(<&kp N1 &kp F &kp N9 &kp D &kp N1>), UNICODE_TRANSLATE(<&kp N2 &kp N0 &kp N0 &kp D>), UNICODE_TRANSLATE(<&kp N1 &kp F &kp N6 &kp N8 &kp N0>))\n\n          /* 🫰 */ UNICODE(emoji_snap_fingers, <&kp N1 &kp F &kp A &kp F &kp N0>)\n\n          /* 👌 */ UNICODE(emoji_ok_hand, <&kp N1 &kp F &kp N4 &kp N4 &kp C>)\n\n          /* 🙏 */ UNICODE(emoji_pray, <&kp N1 &kp F &kp N6 &kp N4 &kp F>)\n\n          /* 😅 */ UNICODE(emoji_sweat_smile, <&kp N1 &kp F &kp N6 &kp N0 &kp N5>)\n\n          /* 😰 */ UNICODE(emoji_cold_sweat, <&kp N1 &kp F &kp N6 &kp N3 &kp N0>)\n\n          /* 🤯 */ UNICODE(emoji_exploding_head, <&kp N1 &kp F &kp N9 &kp N2 &kp F>)\n\n          /* 💁 */ UNICODE(emoji_person_tipping_hand, <&kp N1 &kp F &kp N4 &kp N8 &kp N1>)\n\n          /* 🙆 */ UNICODE(emoji_person_gesturing_ok, <&kp N1 &kp F &kp N6 &kp N4 &kp N6>)\n\n          /* 🙇 */ UNICODE(emoji_person_bowing, <&kp N1 &kp F &kp N6 &kp N4 &kp N7>)\n\n          /* 🙋 */ UNICODE(emoji_person_raising_hand, <&kp N1 &kp F &kp N6 &kp N4 &kp B>)\n\n          /* 🙅 */ UNICODE(emoji_person_gesturing_no, <&kp N1 &kp F &kp N6 &kp N4 &kp N5>)\n\n          /* 🤷 */ UNICODE(emoji_person_shrugging, <&kp N1 &kp F &kp N9 &kp N3 &kp N7>)\n\n          /* ✅ */ UNICODE(emoji_checkoff, <&kp N2 &kp N7 &kp N0 &kp N5>)\n\n          /* 💯 */ UNICODE(emoji_100, <&kp N1 &kp F &kp N4 &kp A &kp F>)\n\n          /* ⚠️ */ UNICODE_SEQUENCE(emoji_warning, <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_TRANSLATE(<&kp N2 &kp N6 &kp A &kp N0>), UNICODE_TRANSLATE(<&kp F &kp E &kp N0 &kp F>))\n\n          /* ❌ */ UNICODE(emoji_x, <&kp N2 &kp N7 &kp N4 &kp C>)\n\n          /* ❓ */ UNICODE(emoji_question, <&kp N2 &kp N7 &kp N5 &kp N3>)\n\n          /* 🤓 */ UNICODE(emoji_nerd, <&kp N1 &kp F &kp N9 &kp N1 &kp N3>)\n\n          /* 🙌 */ UNICODE(emoji_raised_hands, <&kp N1 &kp F &kp N6 &kp N4 &kp C>)\n\n          /* ✨ */ UNICODE(emoji_sparkles, <&kp N2 &kp N7 &kp N2 &kp N8>)\n\n          /* 🤔 */ UNICODE(emoji_thinking, <&kp N1 &kp F &kp N9 &kp N1 &kp N4>)\n\n          /* 👎 */ UNICODE(emoji_thumbs_down, <&kp N1 &kp F &kp N4 &kp N4 &kp E>)\n\n          /* 👍 */ UNICODE(emoji_thumbs_up, <&kp N1 &kp F &kp N4 &kp N4 &kp D>)\n\n};",
  "config_parameters": []
}