behaviors {

    //
    // Home row mods support for natural typing
    // https://sunaku.github.io/home-row-mods.html
    //
    gqt: global-quick-tap {
        compatible = "zmk,behavior-hold-tap";
        label = "GLOBAL_QUICK_TAP";
        #binding-cells = <2>;
        flavor = "tap-preferred";
        tapping-term-ms = <200>;
        quick-tap-ms = <175>;
        global-quick-tap;
        bindings = <&kp>, <&kp>;
    };

    //
    // Key-repeat for layer-tap keys (e.g. Backspace in Miryoku thumb keys)
    // https://github.com/zmkfirmware/zmk/issues/288#issuecomment-770871538
    // https://discord.com/channels/877392805654306816/937645688244826154/1113260457122332672
    //
    behavior_layer_tap {
      quick_tap_ms = <200>;
    };

};

macros {

    //
    // Approximation of Pascal Getreuer's SelectWord feature in QMK
    // https://getreuer.info/posts/keyboards/select-word/index.html
    //
    select_word: select_word {
        compatible = "zmk,behavior-macro";
        label = "select_word";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
        = <&macro_tap &kp LC(RIGHT)>
        , <&macro_wait_time 1> // let cursor move to the next word!
        , <&macro_tap &kp LC(LEFT) &kp LC(LS(RIGHT))>
        ;
    };
    extend_word: extend_word {
        compatible = "zmk,behavior-macro";
        label = "extend_word";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
        = <&macro_tap &kp LC(LS(RIGHT))>
        ;
    };
    select_line: select_line {
        compatible = "zmk,behavior-macro";
        label = "select_line";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
        = <&macro_tap &kp HOME &kp LS(END)>
        ;
    };
    extend_line: extend_line {
        compatible = "zmk,behavior-macro";
        label = "extend_line";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
        = <&macro_tap &kp LS(DOWN) &kp LS(END)>
        ;
    };

};
